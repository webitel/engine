// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: team_hook.proto

package engine

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeamHookEvent int32

const (
	TeamHookEvent_teamHookEventUndefined TeamHookEvent = 0
	TeamHookEvent_agent_status           TeamHookEvent = 1
)

// Enum value maps for TeamHookEvent.
var (
	TeamHookEvent_name = map[int32]string{
		0: "teamHookEventUndefined",
		1: "agent_status",
	}
	TeamHookEvent_value = map[string]int32{
		"teamHookEventUndefined": 0,
		"agent_status":           1,
	}
)

func (x TeamHookEvent) Enum() *TeamHookEvent {
	p := new(TeamHookEvent)
	*p = x
	return p
}

func (x TeamHookEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeamHookEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_team_hook_proto_enumTypes[0].Descriptor()
}

func (TeamHookEvent) Type() protoreflect.EnumType {
	return &file_team_hook_proto_enumTypes[0]
}

func (x TeamHookEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeamHookEvent.Descriptor instead.
func (TeamHookEvent) EnumDescriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{0}
}

type DeleteTeamHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int64  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Id     uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTeamHookRequest) Reset() {
	*x = DeleteTeamHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamHookRequest) ProtoMessage() {}

func (x *DeleteTeamHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamHookRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeamHookRequest) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteTeamHookRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *DeleteTeamHookRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PatchTeamHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields     []string      `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	TeamId     int64         `protobuf:"varint,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Id         uint32        `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Schema     *Lookup       `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	Event      TeamHookEvent `protobuf:"varint,5,opt,name=event,proto3,enum=engine.TeamHookEvent" json:"event,omitempty"`
	Enabled    bool          `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Properties []string      `protobuf:"bytes,7,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PatchTeamHookRequest) Reset() {
	*x = PatchTeamHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchTeamHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchTeamHookRequest) ProtoMessage() {}

func (x *PatchTeamHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchTeamHookRequest.ProtoReflect.Descriptor instead.
func (*PatchTeamHookRequest) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{1}
}

func (x *PatchTeamHookRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PatchTeamHookRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *PatchTeamHookRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchTeamHookRequest) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *PatchTeamHookRequest) GetEvent() TeamHookEvent {
	if x != nil {
		return x.Event
	}
	return TeamHookEvent_teamHookEventUndefined
}

func (x *PatchTeamHookRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PatchTeamHookRequest) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type UpdateTeamHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     int64         `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Id         uint32        `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Schema     *Lookup       `protobuf:"bytes,3,opt,name=schema,proto3" json:"schema,omitempty"`
	Event      TeamHookEvent `protobuf:"varint,4,opt,name=event,proto3,enum=engine.TeamHookEvent" json:"event,omitempty"`
	Enabled    bool          `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Properties []string      `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *UpdateTeamHookRequest) Reset() {
	*x = UpdateTeamHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamHookRequest) ProtoMessage() {}

func (x *UpdateTeamHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamHookRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamHookRequest) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTeamHookRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *UpdateTeamHookRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTeamHookRequest) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *UpdateTeamHookRequest) GetEvent() TeamHookEvent {
	if x != nil {
		return x.Event
	}
	return TeamHookEvent_teamHookEventUndefined
}

func (x *UpdateTeamHookRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateTeamHookRequest) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SearchTeamHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId   int64           `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Page     int32           `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32           `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Q        string          `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	Sort     string          `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields   []string        `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	Id       []uint32        `protobuf:"varint,7,rep,packed,name=id,proto3" json:"id,omitempty"`
	SchemaId []uint32        `protobuf:"varint,8,rep,packed,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Event    []TeamHookEvent `protobuf:"varint,9,rep,packed,name=event,proto3,enum=engine.TeamHookEvent" json:"event,omitempty"`
}

func (x *SearchTeamHookRequest) Reset() {
	*x = SearchTeamHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTeamHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamHookRequest) ProtoMessage() {}

func (x *SearchTeamHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamHookRequest.ProtoReflect.Descriptor instead.
func (*SearchTeamHookRequest) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{3}
}

func (x *SearchTeamHookRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *SearchTeamHookRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchTeamHookRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchTeamHookRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchTeamHookRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchTeamHookRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchTeamHookRequest) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SearchTeamHookRequest) GetSchemaId() []uint32 {
	if x != nil {
		return x.SchemaId
	}
	return nil
}

func (x *SearchTeamHookRequest) GetEvent() []TeamHookEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreateTeamHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId     int64         `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Schema     *Lookup       `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Event      TeamHookEvent `protobuf:"varint,3,opt,name=event,proto3,enum=engine.TeamHookEvent" json:"event,omitempty"`
	Enabled    bool          `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Properties []string      `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *CreateTeamHookRequest) Reset() {
	*x = CreateTeamHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamHookRequest) ProtoMessage() {}

func (x *CreateTeamHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamHookRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamHookRequest) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTeamHookRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *CreateTeamHookRequest) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *CreateTeamHookRequest) GetEvent() TeamHookEvent {
	if x != nil {
		return x.Event
	}
	return TeamHookEvent_teamHookEventUndefined
}

func (x *CreateTeamHookRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateTeamHookRequest) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type ReadTeamHookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId int64  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Id     uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadTeamHookRequest) Reset() {
	*x = ReadTeamHookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadTeamHookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadTeamHookRequest) ProtoMessage() {}

func (x *ReadTeamHookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadTeamHookRequest.ProtoReflect.Descriptor instead.
func (*ReadTeamHookRequest) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{5}
}

func (x *ReadTeamHookRequest) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *ReadTeamHookRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TeamHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Schema     *Lookup       `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Event      TeamHookEvent `protobuf:"varint,3,opt,name=event,proto3,enum=engine.TeamHookEvent" json:"event,omitempty"`
	Enabled    bool          `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Properties []string      `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *TeamHook) Reset() {
	*x = TeamHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamHook) ProtoMessage() {}

func (x *TeamHook) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamHook.ProtoReflect.Descriptor instead.
func (*TeamHook) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{6}
}

func (x *TeamHook) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TeamHook) GetSchema() *Lookup {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TeamHook) GetEvent() TeamHookEvent {
	if x != nil {
		return x.Event
	}
	return TeamHookEvent_teamHookEventUndefined
}

func (x *TeamHook) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *TeamHook) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type ListTeamHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool        `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*TeamHook `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTeamHook) Reset() {
	*x = ListTeamHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_hook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamHook) ProtoMessage() {}

func (x *ListTeamHook) ProtoReflect() protoreflect.Message {
	mi := &file_team_hook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamHook.ProtoReflect.Descriptor instead.
func (*ListTeamHook) Descriptor() ([]byte, []int) {
	return file_team_hook_proto_rawDescGZIP(), []int{7}
}

func (x *ListTeamHook) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListTeamHook) GetItems() []*TeamHook {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_team_hook_proto protoreflect.FileDescriptor

var file_team_hook_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22,
	0xcf, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d,
	0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01,
	0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xbf, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x3e, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4a,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65,
	0x78, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48,
	0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x3d, 0x0a, 0x0d, 0x54, 0x65,
	0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x16, 0x74,
	0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x01, 0x32, 0xc6, 0x05, 0x0a, 0x0f, 0x54, 0x65,
	0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x70, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x12,
	0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f,
	0x7b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12,
	0x71, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f,
	0x6b, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22,
	0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x12, 0x6e, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f,
	0x6f, 0x6b, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f,
	0x6b, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x75, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a,
	0x1a, 0x27, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x74,
	0x65, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68,
	0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0d, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x32, 0x27, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b,
	0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x6f, 0x6f,
	0x6b, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_team_hook_proto_rawDescOnce sync.Once
	file_team_hook_proto_rawDescData = file_team_hook_proto_rawDesc
)

func file_team_hook_proto_rawDescGZIP() []byte {
	file_team_hook_proto_rawDescOnce.Do(func() {
		file_team_hook_proto_rawDescData = protoimpl.X.CompressGZIP(file_team_hook_proto_rawDescData)
	})
	return file_team_hook_proto_rawDescData
}

var file_team_hook_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_team_hook_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_team_hook_proto_goTypes = []interface{}{
	(TeamHookEvent)(0),            // 0: engine.TeamHookEvent
	(*DeleteTeamHookRequest)(nil), // 1: engine.DeleteTeamHookRequest
	(*PatchTeamHookRequest)(nil),  // 2: engine.PatchTeamHookRequest
	(*UpdateTeamHookRequest)(nil), // 3: engine.UpdateTeamHookRequest
	(*SearchTeamHookRequest)(nil), // 4: engine.SearchTeamHookRequest
	(*CreateTeamHookRequest)(nil), // 5: engine.CreateTeamHookRequest
	(*ReadTeamHookRequest)(nil),   // 6: engine.ReadTeamHookRequest
	(*TeamHook)(nil),              // 7: engine.TeamHook
	(*ListTeamHook)(nil),          // 8: engine.ListTeamHook
	(*Lookup)(nil),                // 9: engine.Lookup
}
var file_team_hook_proto_depIdxs = []int32{
	9,  // 0: engine.PatchTeamHookRequest.schema:type_name -> engine.Lookup
	0,  // 1: engine.PatchTeamHookRequest.event:type_name -> engine.TeamHookEvent
	9,  // 2: engine.UpdateTeamHookRequest.schema:type_name -> engine.Lookup
	0,  // 3: engine.UpdateTeamHookRequest.event:type_name -> engine.TeamHookEvent
	0,  // 4: engine.SearchTeamHookRequest.event:type_name -> engine.TeamHookEvent
	9,  // 5: engine.CreateTeamHookRequest.schema:type_name -> engine.Lookup
	0,  // 6: engine.CreateTeamHookRequest.event:type_name -> engine.TeamHookEvent
	9,  // 7: engine.TeamHook.schema:type_name -> engine.Lookup
	0,  // 8: engine.TeamHook.event:type_name -> engine.TeamHookEvent
	7,  // 9: engine.ListTeamHook.items:type_name -> engine.TeamHook
	5,  // 10: engine.TeamHookService.CreateTeamHook:input_type -> engine.CreateTeamHookRequest
	4,  // 11: engine.TeamHookService.SearchTeamHook:input_type -> engine.SearchTeamHookRequest
	6,  // 12: engine.TeamHookService.ReadTeamHook:input_type -> engine.ReadTeamHookRequest
	3,  // 13: engine.TeamHookService.UpdateTeamHook:input_type -> engine.UpdateTeamHookRequest
	2,  // 14: engine.TeamHookService.PatchTeamHook:input_type -> engine.PatchTeamHookRequest
	1,  // 15: engine.TeamHookService.DeleteTeamHook:input_type -> engine.DeleteTeamHookRequest
	7,  // 16: engine.TeamHookService.CreateTeamHook:output_type -> engine.TeamHook
	8,  // 17: engine.TeamHookService.SearchTeamHook:output_type -> engine.ListTeamHook
	7,  // 18: engine.TeamHookService.ReadTeamHook:output_type -> engine.TeamHook
	7,  // 19: engine.TeamHookService.UpdateTeamHook:output_type -> engine.TeamHook
	7,  // 20: engine.TeamHookService.PatchTeamHook:output_type -> engine.TeamHook
	7,  // 21: engine.TeamHookService.DeleteTeamHook:output_type -> engine.TeamHook
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_team_hook_proto_init() }
func file_team_hook_proto_init() {
	if File_team_hook_proto != nil {
		return
	}
	file_const_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_team_hook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchTeamHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTeamHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadTeamHookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_hook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_team_hook_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_team_hook_proto_goTypes,
		DependencyIndexes: file_team_hook_proto_depIdxs,
		EnumInfos:         file_team_hook_proto_enumTypes,
		MessageInfos:      file_team_hook_proto_msgTypes,
	}.Build()
	File_team_hook_proto = out.File
	file_team_hook_proto_rawDesc = nil
	file_team_hook_proto_goTypes = nil
	file_team_hook_proto_depIdxs = nil
}
