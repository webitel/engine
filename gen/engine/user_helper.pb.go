// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: user_helper.proto

package engine

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityWorkspaceWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *ActivityWorkspaceWidgetRequest) Reset() {
	*x = ActivityWorkspaceWidgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_helper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityWorkspaceWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityWorkspaceWidgetRequest) ProtoMessage() {}

func (x *ActivityWorkspaceWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_helper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityWorkspaceWidgetRequest.ProtoReflect.Descriptor instead.
func (*ActivityWorkspaceWidgetRequest) Descriptor() ([]byte, []int) {
	return file_user_helper_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityWorkspaceWidgetRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ActivityWorkspaceWidgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utilization      float32 `protobuf:"fixed32,1,opt,name=utilization,proto3" json:"utilization,omitempty"`
	Occupancy        float32 `protobuf:"fixed32,2,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
	CallAbandoned    int32   `protobuf:"varint,3,opt,name=call_abandoned,json=callAbandoned,proto3" json:"call_abandoned,omitempty"`
	CallHandled      int32   `protobuf:"varint,4,opt,name=call_handled,json=callHandled,proto3" json:"call_handled,omitempty"`
	AvgTalkSec       float32 `protobuf:"fixed32,5,opt,name=avg_talk_sec,json=avgTalkSec,proto3" json:"avg_talk_sec,omitempty"`
	AvgHoldSec       float32 `protobuf:"fixed32,6,opt,name=avg_hold_sec,json=avgHoldSec,proto3" json:"avg_hold_sec,omitempty"`
	ChatAccepts      int32   `protobuf:"varint,7,opt,name=chat_accepts,json=chatAccepts,proto3" json:"chat_accepts,omitempty"`
	ChatAht          float32 `protobuf:"fixed32,8,opt,name=chat_aht,json=chatAht,proto3" json:"chat_aht,omitempty"`
	CallMissed       int32   `protobuf:"varint,9,opt,name=call_missed,json=callMissed,proto3" json:"call_missed,omitempty"`
	CallInbound      int32   `protobuf:"varint,10,opt,name=call_inbound,json=callInbound,proto3" json:"call_inbound,omitempty"`
	ScoreRequiredAvg float32 `protobuf:"fixed32,11,opt,name=score_required_avg,json=scoreRequiredAvg,proto3" json:"score_required_avg,omitempty"`
	ScoreOptionalAvg float32 `protobuf:"fixed32,12,opt,name=score_optional_avg,json=scoreOptionalAvg,proto3" json:"score_optional_avg,omitempty"`
	ScoreCount       int64   `protobuf:"varint,13,opt,name=score_count,json=scoreCount,proto3" json:"score_count,omitempty"`
	ScoreRequiredSum float32 `protobuf:"fixed32,14,opt,name=score_required_sum,json=scoreRequiredSum,proto3" json:"score_required_sum,omitempty"`
	ScoreOptionalSum float32 `protobuf:"fixed32,15,opt,name=score_optional_sum,json=scoreOptionalSum,proto3" json:"score_optional_sum,omitempty"`
	SumTalkSec       int64   `protobuf:"varint,16,opt,name=sum_talk_sec,json=sumTalkSec,proto3" json:"sum_talk_sec,omitempty"`
	VoiceMail        int32   `protobuf:"varint,17,opt,name=voice_mail,json=voiceMail,proto3" json:"voice_mail,omitempty"`
	Available        int32   `protobuf:"varint,18,opt,name=available,proto3" json:"available,omitempty"`
	Online           int32   `protobuf:"varint,19,opt,name=online,proto3" json:"online,omitempty"`
	Processing       int32   `protobuf:"varint,20,opt,name=processing,proto3" json:"processing,omitempty"`
	TaskAccepts      int32   `protobuf:"varint,21,opt,name=task_accepts,json=taskAccepts,proto3" json:"task_accepts,omitempty"`
	QueueTalkSec     int32   `protobuf:"varint,22,opt,name=queue_talk_sec,json=queueTalkSec,proto3" json:"queue_talk_sec,omitempty"`
	CallQueueMissed  int32   `protobuf:"varint,23,opt,name=call_queue_missed,json=callQueueMissed,proto3" json:"call_queue_missed,omitempty"`
	CallInboundQueue int32   `protobuf:"varint,24,opt,name=call_inbound_queue,json=callInboundQueue,proto3" json:"call_inbound_queue,omitempty"`
	CallDialerQueue  int32   `protobuf:"varint,25,opt,name=call_dialer_queue,json=callDialerQueue,proto3" json:"call_dialer_queue,omitempty"`
	CallManual       int32   `protobuf:"varint,26,opt,name=call_manual,json=callManual,proto3" json:"call_manual,omitempty"`
}

func (x *ActivityWorkspaceWidgetResponse) Reset() {
	*x = ActivityWorkspaceWidgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_helper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityWorkspaceWidgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityWorkspaceWidgetResponse) ProtoMessage() {}

func (x *ActivityWorkspaceWidgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_helper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityWorkspaceWidgetResponse.ProtoReflect.Descriptor instead.
func (*ActivityWorkspaceWidgetResponse) Descriptor() ([]byte, []int) {
	return file_user_helper_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityWorkspaceWidgetResponse) GetUtilization() float32 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetOccupancy() float32 {
	if x != nil {
		return x.Occupancy
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallAbandoned() int32 {
	if x != nil {
		return x.CallAbandoned
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallHandled() int32 {
	if x != nil {
		return x.CallHandled
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetAvgTalkSec() float32 {
	if x != nil {
		return x.AvgTalkSec
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetAvgHoldSec() float32 {
	if x != nil {
		return x.AvgHoldSec
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetChatAccepts() int32 {
	if x != nil {
		return x.ChatAccepts
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetChatAht() float32 {
	if x != nil {
		return x.ChatAht
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallMissed() int32 {
	if x != nil {
		return x.CallMissed
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallInbound() int32 {
	if x != nil {
		return x.CallInbound
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetScoreRequiredAvg() float32 {
	if x != nil {
		return x.ScoreRequiredAvg
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetScoreOptionalAvg() float32 {
	if x != nil {
		return x.ScoreOptionalAvg
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetScoreCount() int64 {
	if x != nil {
		return x.ScoreCount
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetScoreRequiredSum() float32 {
	if x != nil {
		return x.ScoreRequiredSum
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetScoreOptionalSum() float32 {
	if x != nil {
		return x.ScoreOptionalSum
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetSumTalkSec() int64 {
	if x != nil {
		return x.SumTalkSec
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetVoiceMail() int32 {
	if x != nil {
		return x.VoiceMail
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetProcessing() int32 {
	if x != nil {
		return x.Processing
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetTaskAccepts() int32 {
	if x != nil {
		return x.TaskAccepts
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetQueueTalkSec() int32 {
	if x != nil {
		return x.QueueTalkSec
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallQueueMissed() int32 {
	if x != nil {
		return x.CallQueueMissed
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallInboundQueue() int32 {
	if x != nil {
		return x.CallInboundQueue
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallDialerQueue() int32 {
	if x != nil {
		return x.CallDialerQueue
	}
	return 0
}

func (x *ActivityWorkspaceWidgetResponse) GetCallManual() int32 {
	if x != nil {
		return x.CallManual
	}
	return 0
}

type DefaultDeviceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DefaultDeviceConfigRequest) Reset() {
	*x = DefaultDeviceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_helper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultDeviceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultDeviceConfigRequest) ProtoMessage() {}

func (x *DefaultDeviceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_helper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultDeviceConfigRequest.ProtoReflect.Descriptor instead.
func (*DefaultDeviceConfigRequest) Descriptor() ([]byte, []int) {
	return file_user_helper_proto_rawDescGZIP(), []int{2}
}

func (x *DefaultDeviceConfigRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DefaultDeviceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*DefaultDeviceConfigResponse_Sip
	//	*DefaultDeviceConfigResponse_Webrtc
	Data isDefaultDeviceConfigResponse_Data `protobuf_oneof:"data"`
}

func (x *DefaultDeviceConfigResponse) Reset() {
	*x = DefaultDeviceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_helper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultDeviceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultDeviceConfigResponse) ProtoMessage() {}

func (x *DefaultDeviceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_helper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultDeviceConfigResponse.ProtoReflect.Descriptor instead.
func (*DefaultDeviceConfigResponse) Descriptor() ([]byte, []int) {
	return file_user_helper_proto_rawDescGZIP(), []int{3}
}

func (m *DefaultDeviceConfigResponse) GetData() isDefaultDeviceConfigResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DefaultDeviceConfigResponse) GetSip() *DefaultDeviceConfigResponse_SipDeviceConfig {
	if x, ok := x.GetData().(*DefaultDeviceConfigResponse_Sip); ok {
		return x.Sip
	}
	return nil
}

func (x *DefaultDeviceConfigResponse) GetWebrtc() *DefaultDeviceConfigResponse_WebRTCDeviceConfig {
	if x, ok := x.GetData().(*DefaultDeviceConfigResponse_Webrtc); ok {
		return x.Webrtc
	}
	return nil
}

type isDefaultDeviceConfigResponse_Data interface {
	isDefaultDeviceConfigResponse_Data()
}

type DefaultDeviceConfigResponse_Sip struct {
	Sip *DefaultDeviceConfigResponse_SipDeviceConfig `protobuf:"bytes,1,opt,name=sip,proto3,oneof"`
}

type DefaultDeviceConfigResponse_Webrtc struct {
	Webrtc *DefaultDeviceConfigResponse_WebRTCDeviceConfig `protobuf:"bytes,2,opt,name=webrtc,proto3,oneof"`
}

func (*DefaultDeviceConfigResponse_Sip) isDefaultDeviceConfigResponse_Data() {}

func (*DefaultDeviceConfigResponse_Webrtc) isDefaultDeviceConfigResponse_Data() {}

type DefaultDeviceConfigResponse_SipDeviceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth      string `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Domain    string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Extension string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	Password  string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Proxy     string `protobuf:"bytes,5,opt,name=proxy,proto3" json:"proxy,omitempty"`
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) Reset() {
	*x = DefaultDeviceConfigResponse_SipDeviceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_helper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultDeviceConfigResponse_SipDeviceConfig) ProtoMessage() {}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_user_helper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultDeviceConfigResponse_SipDeviceConfig.ProtoReflect.Descriptor instead.
func (*DefaultDeviceConfigResponse_SipDeviceConfig) Descriptor() ([]byte, []int) {
	return file_user_helper_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_SipDeviceConfig) GetProxy() string {
	if x != nil {
		return x.Proxy
	}
	return ""
}

type DefaultDeviceConfigResponse_WebRTCDeviceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizationUser string `protobuf:"bytes,1,opt,name=authorization_user,json=authorizationUser,proto3" json:"authorization_user,omitempty"`
	DisplayName       string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Extension         string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	Ha1               string `protobuf:"bytes,4,opt,name=ha1,proto3" json:"ha1,omitempty"`
	Realm             string `protobuf:"bytes,5,opt,name=realm,proto3" json:"realm,omitempty"`
	Server            string `protobuf:"bytes,6,opt,name=server,proto3" json:"server,omitempty"`
	Uri               string `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) Reset() {
	*x = DefaultDeviceConfigResponse_WebRTCDeviceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_helper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultDeviceConfigResponse_WebRTCDeviceConfig) ProtoMessage() {}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_user_helper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultDeviceConfigResponse_WebRTCDeviceConfig.ProtoReflect.Descriptor instead.
func (*DefaultDeviceConfigResponse_WebRTCDeviceConfig) Descriptor() ([]byte, []int) {
	return file_user_helper_proto_rawDescGZIP(), []int{3, 1}
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetAuthorizationUser() string {
	if x != nil {
		return x.AuthorizationUser
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetHa1() string {
	if x != nil {
		return x.Ha1
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *DefaultDeviceConfigResponse_WebRTCDeviceConfig) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_user_helper_proto protoreflect.FileDescriptor

var file_user_helper_proto_rawDesc = []byte{
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x1e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0xd1, 0x07, 0x0a, 0x1f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x63,
	0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x54, 0x61, 0x6c, 0x6b,
	0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x5f,
	0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x48, 0x6f,
	0x6c, 0x64, 0x53, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x63, 0x68, 0x61, 0x74,
	0x41, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x69, 0x73, 0x73,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x69,
	0x73, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x76, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x76, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53,
	0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x75, 0x6d,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x6d, 0x54, 0x61, 0x6c, 0x6b, 0x53,
	0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6d,
	0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x6c,
	0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x44, 0x69, 0x61, 0x6c, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x22, 0x30, 0x0a, 0x1a, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa9, 0x04, 0x0a, 0x1b, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x03, 0x73, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x70, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x69, 0x70, 0x12, 0x50, 0x0a, 0x06, 0x77, 0x65, 0x62, 0x72, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x77, 0x65,
	0x62, 0x72, 0x74, 0x63, 0x1a, 0x8d, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x70, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x1a, 0xd6, 0x01, 0x0a, 0x12, 0x57, 0x65, 0x62, 0x52, 0x54, 0x43, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x68,
	0x61, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x61, 0x31, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xaa, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x48, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x13,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d,
	0x12, 0x8f, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_helper_proto_rawDescOnce sync.Once
	file_user_helper_proto_rawDescData = file_user_helper_proto_rawDesc
)

func file_user_helper_proto_rawDescGZIP() []byte {
	file_user_helper_proto_rawDescOnce.Do(func() {
		file_user_helper_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_helper_proto_rawDescData)
	})
	return file_user_helper_proto_rawDescData
}

var file_user_helper_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_user_helper_proto_goTypes = []interface{}{
	(*ActivityWorkspaceWidgetRequest)(nil),                 // 0: engine.ActivityWorkspaceWidgetRequest
	(*ActivityWorkspaceWidgetResponse)(nil),                // 1: engine.ActivityWorkspaceWidgetResponse
	(*DefaultDeviceConfigRequest)(nil),                     // 2: engine.DefaultDeviceConfigRequest
	(*DefaultDeviceConfigResponse)(nil),                    // 3: engine.DefaultDeviceConfigResponse
	(*DefaultDeviceConfigResponse_SipDeviceConfig)(nil),    // 4: engine.DefaultDeviceConfigResponse.SipDeviceConfig
	(*DefaultDeviceConfigResponse_WebRTCDeviceConfig)(nil), // 5: engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig
}
var file_user_helper_proto_depIdxs = []int32{
	4, // 0: engine.DefaultDeviceConfigResponse.sip:type_name -> engine.DefaultDeviceConfigResponse.SipDeviceConfig
	5, // 1: engine.DefaultDeviceConfigResponse.webrtc:type_name -> engine.DefaultDeviceConfigResponse.WebRTCDeviceConfig
	2, // 2: engine.UserHelperService.DefaultDeviceConfig:input_type -> engine.DefaultDeviceConfigRequest
	0, // 3: engine.UserHelperService.ActivityWorkspaceWidget:input_type -> engine.ActivityWorkspaceWidgetRequest
	3, // 4: engine.UserHelperService.DefaultDeviceConfig:output_type -> engine.DefaultDeviceConfigResponse
	1, // 5: engine.UserHelperService.ActivityWorkspaceWidget:output_type -> engine.ActivityWorkspaceWidgetResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_user_helper_proto_init() }
func file_user_helper_proto_init() {
	if File_user_helper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_helper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityWorkspaceWidgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_helper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityWorkspaceWidgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_helper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultDeviceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_helper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultDeviceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_helper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultDeviceConfigResponse_SipDeviceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_helper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultDeviceConfigResponse_WebRTCDeviceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_user_helper_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*DefaultDeviceConfigResponse_Sip)(nil),
		(*DefaultDeviceConfigResponse_Webrtc)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_helper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_helper_proto_goTypes,
		DependencyIndexes: file_user_helper_proto_depIdxs,
		MessageInfos:      file_user_helper_proto_msgTypes,
	}.Build()
	File_user_helper_proto = out.File
	file_user_helper_proto_rawDesc = nil
	file_user_helper_proto_goTypes = nil
	file_user_helper_proto_depIdxs = nil
}
