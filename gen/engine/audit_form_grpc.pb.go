// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: audit_form.proto

package engine

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AuditFormService_CreateAuditForm_FullMethodName     = "/engine.AuditFormService/CreateAuditForm"
	AuditFormService_SearchAuditForm_FullMethodName     = "/engine.AuditFormService/SearchAuditForm"
	AuditFormService_ReadAuditForm_FullMethodName       = "/engine.AuditFormService/ReadAuditForm"
	AuditFormService_UpdateAuditForm_FullMethodName     = "/engine.AuditFormService/UpdateAuditForm"
	AuditFormService_PatchAuditForm_FullMethodName      = "/engine.AuditFormService/PatchAuditForm"
	AuditFormService_DeleteAuditForm_FullMethodName     = "/engine.AuditFormService/DeleteAuditForm"
	AuditFormService_CreateAuditFormRate_FullMethodName = "/engine.AuditFormService/CreateAuditFormRate"
	AuditFormService_SearchAuditRate_FullMethodName     = "/engine.AuditFormService/SearchAuditRate"
	AuditFormService_ReadAuditRate_FullMethodName       = "/engine.AuditFormService/ReadAuditRate"
	AuditFormService_UpdateAuditRate_FullMethodName     = "/engine.AuditFormService/UpdateAuditRate"
	AuditFormService_DeleteAuditRate_FullMethodName     = "/engine.AuditFormService/DeleteAuditRate"
)

// AuditFormServiceClient is the client API for AuditFormService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AuditFormServiceClient interface {
	CreateAuditForm(ctx context.Context, in *CreateAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error)
	SearchAuditForm(ctx context.Context, in *SearchAuditFormRequest, opts ...grpc.CallOption) (*ListAuditForm, error)
	ReadAuditForm(ctx context.Context, in *ReadAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error)
	UpdateAuditForm(ctx context.Context, in *UpdateAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error)
	PatchAuditForm(ctx context.Context, in *PatchAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error)
	DeleteAuditForm(ctx context.Context, in *DeleteAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error)
	CreateAuditFormRate(ctx context.Context, in *CreateAuditFormRateRequest, opts ...grpc.CallOption) (*AuditRate, error)
	SearchAuditRate(ctx context.Context, in *SearchAuditRateRequest, opts ...grpc.CallOption) (*ListAuditRate, error)
	ReadAuditRate(ctx context.Context, in *ReadAuditRateRequest, opts ...grpc.CallOption) (*AuditRate, error)
	UpdateAuditRate(ctx context.Context, in *UpdateAuditRateRequest, opts ...grpc.CallOption) (*AuditRate, error)
	DeleteAuditRate(ctx context.Context, in *DeleteAuditRateRequest, opts ...grpc.CallOption) (*AuditRate, error)
}

type auditFormServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuditFormServiceClient(cc grpc.ClientConnInterface) AuditFormServiceClient {
	return &auditFormServiceClient{cc}
}

func (c *auditFormServiceClient) CreateAuditForm(ctx context.Context, in *CreateAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error) {
	out := new(AuditForm)
	err := c.cc.Invoke(ctx, AuditFormService_CreateAuditForm_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) SearchAuditForm(ctx context.Context, in *SearchAuditFormRequest, opts ...grpc.CallOption) (*ListAuditForm, error) {
	out := new(ListAuditForm)
	err := c.cc.Invoke(ctx, AuditFormService_SearchAuditForm_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) ReadAuditForm(ctx context.Context, in *ReadAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error) {
	out := new(AuditForm)
	err := c.cc.Invoke(ctx, AuditFormService_ReadAuditForm_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) UpdateAuditForm(ctx context.Context, in *UpdateAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error) {
	out := new(AuditForm)
	err := c.cc.Invoke(ctx, AuditFormService_UpdateAuditForm_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) PatchAuditForm(ctx context.Context, in *PatchAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error) {
	out := new(AuditForm)
	err := c.cc.Invoke(ctx, AuditFormService_PatchAuditForm_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) DeleteAuditForm(ctx context.Context, in *DeleteAuditFormRequest, opts ...grpc.CallOption) (*AuditForm, error) {
	out := new(AuditForm)
	err := c.cc.Invoke(ctx, AuditFormService_DeleteAuditForm_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) CreateAuditFormRate(ctx context.Context, in *CreateAuditFormRateRequest, opts ...grpc.CallOption) (*AuditRate, error) {
	out := new(AuditRate)
	err := c.cc.Invoke(ctx, AuditFormService_CreateAuditFormRate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) SearchAuditRate(ctx context.Context, in *SearchAuditRateRequest, opts ...grpc.CallOption) (*ListAuditRate, error) {
	out := new(ListAuditRate)
	err := c.cc.Invoke(ctx, AuditFormService_SearchAuditRate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) ReadAuditRate(ctx context.Context, in *ReadAuditRateRequest, opts ...grpc.CallOption) (*AuditRate, error) {
	out := new(AuditRate)
	err := c.cc.Invoke(ctx, AuditFormService_ReadAuditRate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) UpdateAuditRate(ctx context.Context, in *UpdateAuditRateRequest, opts ...grpc.CallOption) (*AuditRate, error) {
	out := new(AuditRate)
	err := c.cc.Invoke(ctx, AuditFormService_UpdateAuditRate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditFormServiceClient) DeleteAuditRate(ctx context.Context, in *DeleteAuditRateRequest, opts ...grpc.CallOption) (*AuditRate, error) {
	out := new(AuditRate)
	err := c.cc.Invoke(ctx, AuditFormService_DeleteAuditRate_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuditFormServiceServer is the server API for AuditFormService service.
// All implementations must embed UnimplementedAuditFormServiceServer
// for forward compatibility
type AuditFormServiceServer interface {
	CreateAuditForm(context.Context, *CreateAuditFormRequest) (*AuditForm, error)
	SearchAuditForm(context.Context, *SearchAuditFormRequest) (*ListAuditForm, error)
	ReadAuditForm(context.Context, *ReadAuditFormRequest) (*AuditForm, error)
	UpdateAuditForm(context.Context, *UpdateAuditFormRequest) (*AuditForm, error)
	PatchAuditForm(context.Context, *PatchAuditFormRequest) (*AuditForm, error)
	DeleteAuditForm(context.Context, *DeleteAuditFormRequest) (*AuditForm, error)
	CreateAuditFormRate(context.Context, *CreateAuditFormRateRequest) (*AuditRate, error)
	SearchAuditRate(context.Context, *SearchAuditRateRequest) (*ListAuditRate, error)
	ReadAuditRate(context.Context, *ReadAuditRateRequest) (*AuditRate, error)
	UpdateAuditRate(context.Context, *UpdateAuditRateRequest) (*AuditRate, error)
	DeleteAuditRate(context.Context, *DeleteAuditRateRequest) (*AuditRate, error)
	mustEmbedUnimplementedAuditFormServiceServer()
}

// UnimplementedAuditFormServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAuditFormServiceServer struct {
}

func (UnimplementedAuditFormServiceServer) CreateAuditForm(context.Context, *CreateAuditFormRequest) (*AuditForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuditForm not implemented")
}
func (UnimplementedAuditFormServiceServer) SearchAuditForm(context.Context, *SearchAuditFormRequest) (*ListAuditForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAuditForm not implemented")
}
func (UnimplementedAuditFormServiceServer) ReadAuditForm(context.Context, *ReadAuditFormRequest) (*AuditForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAuditForm not implemented")
}
func (UnimplementedAuditFormServiceServer) UpdateAuditForm(context.Context, *UpdateAuditFormRequest) (*AuditForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuditForm not implemented")
}
func (UnimplementedAuditFormServiceServer) PatchAuditForm(context.Context, *PatchAuditFormRequest) (*AuditForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PatchAuditForm not implemented")
}
func (UnimplementedAuditFormServiceServer) DeleteAuditForm(context.Context, *DeleteAuditFormRequest) (*AuditForm, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuditForm not implemented")
}
func (UnimplementedAuditFormServiceServer) CreateAuditFormRate(context.Context, *CreateAuditFormRateRequest) (*AuditRate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuditFormRate not implemented")
}
func (UnimplementedAuditFormServiceServer) SearchAuditRate(context.Context, *SearchAuditRateRequest) (*ListAuditRate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAuditRate not implemented")
}
func (UnimplementedAuditFormServiceServer) ReadAuditRate(context.Context, *ReadAuditRateRequest) (*AuditRate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAuditRate not implemented")
}
func (UnimplementedAuditFormServiceServer) UpdateAuditRate(context.Context, *UpdateAuditRateRequest) (*AuditRate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuditRate not implemented")
}
func (UnimplementedAuditFormServiceServer) DeleteAuditRate(context.Context, *DeleteAuditRateRequest) (*AuditRate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuditRate not implemented")
}
func (UnimplementedAuditFormServiceServer) mustEmbedUnimplementedAuditFormServiceServer() {}

// UnsafeAuditFormServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AuditFormServiceServer will
// result in compilation errors.
type UnsafeAuditFormServiceServer interface {
	mustEmbedUnimplementedAuditFormServiceServer()
}

func RegisterAuditFormServiceServer(s grpc.ServiceRegistrar, srv AuditFormServiceServer) {
	s.RegisterService(&AuditFormService_ServiceDesc, srv)
}

func _AuditFormService_CreateAuditForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuditFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).CreateAuditForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_CreateAuditForm_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).CreateAuditForm(ctx, req.(*CreateAuditFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_SearchAuditForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAuditFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).SearchAuditForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_SearchAuditForm_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).SearchAuditForm(ctx, req.(*SearchAuditFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_ReadAuditForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAuditFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).ReadAuditForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_ReadAuditForm_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).ReadAuditForm(ctx, req.(*ReadAuditFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_UpdateAuditForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuditFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).UpdateAuditForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_UpdateAuditForm_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).UpdateAuditForm(ctx, req.(*UpdateAuditFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_PatchAuditForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PatchAuditFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).PatchAuditForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_PatchAuditForm_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).PatchAuditForm(ctx, req.(*PatchAuditFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_DeleteAuditForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuditFormRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).DeleteAuditForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_DeleteAuditForm_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).DeleteAuditForm(ctx, req.(*DeleteAuditFormRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_CreateAuditFormRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuditFormRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).CreateAuditFormRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_CreateAuditFormRate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).CreateAuditFormRate(ctx, req.(*CreateAuditFormRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_SearchAuditRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAuditRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).SearchAuditRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_SearchAuditRate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).SearchAuditRate(ctx, req.(*SearchAuditRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_ReadAuditRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAuditRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).ReadAuditRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_ReadAuditRate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).ReadAuditRate(ctx, req.(*ReadAuditRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_UpdateAuditRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuditRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).UpdateAuditRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_UpdateAuditRate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).UpdateAuditRate(ctx, req.(*UpdateAuditRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditFormService_DeleteAuditRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuditRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditFormServiceServer).DeleteAuditRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AuditFormService_DeleteAuditRate_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditFormServiceServer).DeleteAuditRate(ctx, req.(*DeleteAuditRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AuditFormService_ServiceDesc is the grpc.ServiceDesc for AuditFormService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AuditFormService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "engine.AuditFormService",
	HandlerType: (*AuditFormServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAuditForm",
			Handler:    _AuditFormService_CreateAuditForm_Handler,
		},
		{
			MethodName: "SearchAuditForm",
			Handler:    _AuditFormService_SearchAuditForm_Handler,
		},
		{
			MethodName: "ReadAuditForm",
			Handler:    _AuditFormService_ReadAuditForm_Handler,
		},
		{
			MethodName: "UpdateAuditForm",
			Handler:    _AuditFormService_UpdateAuditForm_Handler,
		},
		{
			MethodName: "PatchAuditForm",
			Handler:    _AuditFormService_PatchAuditForm_Handler,
		},
		{
			MethodName: "DeleteAuditForm",
			Handler:    _AuditFormService_DeleteAuditForm_Handler,
		},
		{
			MethodName: "CreateAuditFormRate",
			Handler:    _AuditFormService_CreateAuditFormRate_Handler,
		},
		{
			MethodName: "SearchAuditRate",
			Handler:    _AuditFormService_SearchAuditRate_Handler,
		},
		{
			MethodName: "ReadAuditRate",
			Handler:    _AuditFormService_ReadAuditRate_Handler,
		},
		{
			MethodName: "UpdateAuditRate",
			Handler:    _AuditFormService_UpdateAuditRate_Handler,
		},
		{
			MethodName: "DeleteAuditRate",
			Handler:    _AuditFormService_DeleteAuditRate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "audit_form.proto",
}
