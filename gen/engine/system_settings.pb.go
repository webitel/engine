// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: system_settings.proto

package engine

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemSettingName int32

const (
	SystemSettingName_empty_system_settings_name  SystemSettingName = 0
	SystemSettingName_enable_omnichannel          SystemSettingName = 1
	SystemSettingName_member_chunk_size           SystemSettingName = 2
	SystemSettingName_amd_cancel_not_human        SystemSettingName = 3
	SystemSettingName_scheme_version_limit        SystemSettingName = 4
	SystemSettingName_enable_2fa                  SystemSettingName = 5
	SystemSettingName_export_settings             SystemSettingName = 6
	SystemSettingName_search_number_length        SystemSettingName = 7
	SystemSettingName_chat_ai_connection          SystemSettingName = 8
	SystemSettingName_password_reg_exp            SystemSettingName = 9
	SystemSettingName_password_validation_text    SystemSettingName = 10
	SystemSettingName_autolink_call_to_contact    SystemSettingName = 11
	SystemSettingName_period_to_playback_records  SystemSettingName = 12
	SystemSettingName_is_fulltext_search_enabled  SystemSettingName = 13
	SystemSettingName_wbt_hide_contact            SystemSettingName = 14
	SystemSettingName_show_full_contact           SystemSettingName = 15
	SystemSettingName_call_end_sound_notification SystemSettingName = 16
	SystemSettingName_call_end_push_notification  SystemSettingName = 17
	SystemSettingName_chat_end_sound_notification SystemSettingName = 18
	SystemSettingName_chat_end_push_notification  SystemSettingName = 19
	SystemSettingName_task_end_sound_notification SystemSettingName = 20
	SystemSettingName_task_end_push_notification  SystemSettingName = 21
	SystemSettingName_push_notification_timeout   SystemSettingName = 22
	SystemSettingName_labels_to_limit_contacts    SystemSettingName = 23
)

// Enum value maps for SystemSettingName.
var (
	SystemSettingName_name = map[int32]string{
		0:  "empty_system_settings_name",
		1:  "enable_omnichannel",
		2:  "member_chunk_size",
		3:  "amd_cancel_not_human",
		4:  "scheme_version_limit",
		5:  "enable_2fa",
		6:  "export_settings",
		7:  "search_number_length",
		8:  "chat_ai_connection",
		9:  "password_reg_exp",
		10: "password_validation_text",
		11: "autolink_call_to_contact",
		12: "period_to_playback_records",
		13: "is_fulltext_search_enabled",
		14: "wbt_hide_contact",
		15: "show_full_contact",
		16: "call_end_sound_notification",
		17: "call_end_push_notification",
		18: "chat_end_sound_notification",
		19: "chat_end_push_notification",
		20: "task_end_sound_notification",
		21: "task_end_push_notification",
		22: "push_notification_timeout",
		23: "labels_to_limit_contacts",
	}
	SystemSettingName_value = map[string]int32{
		"empty_system_settings_name":  0,
		"enable_omnichannel":          1,
		"member_chunk_size":           2,
		"amd_cancel_not_human":        3,
		"scheme_version_limit":        4,
		"enable_2fa":                  5,
		"export_settings":             6,
		"search_number_length":        7,
		"chat_ai_connection":          8,
		"password_reg_exp":            9,
		"password_validation_text":    10,
		"autolink_call_to_contact":    11,
		"period_to_playback_records":  12,
		"is_fulltext_search_enabled":  13,
		"wbt_hide_contact":            14,
		"show_full_contact":           15,
		"call_end_sound_notification": 16,
		"call_end_push_notification":  17,
		"chat_end_sound_notification": 18,
		"chat_end_push_notification":  19,
		"task_end_sound_notification": 20,
		"task_end_push_notification":  21,
		"push_notification_timeout":   22,
		"labels_to_limit_contacts":    23,
	}
)

func (x SystemSettingName) Enum() *SystemSettingName {
	p := new(SystemSettingName)
	*p = x
	return p
}

func (x SystemSettingName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemSettingName) Descriptor() protoreflect.EnumDescriptor {
	return file_system_settings_proto_enumTypes[0].Descriptor()
}

func (SystemSettingName) Type() protoreflect.EnumType {
	return &file_system_settings_proto_enumTypes[0]
}

func (x SystemSettingName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemSettingName.Descriptor instead.
func (SystemSettingName) EnumDescriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{0}
}

type SearchAvailableSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q      string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort   string   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SearchAvailableSystemSettingRequest) Reset() {
	*x = SearchAvailableSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAvailableSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAvailableSystemSettingRequest) ProtoMessage() {}

func (x *SearchAvailableSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAvailableSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*SearchAvailableSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{0}
}

func (x *SearchAvailableSystemSettingRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAvailableSystemSettingRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAvailableSystemSettingRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchAvailableSystemSettingRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchAvailableSystemSettingRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type AvailableSystemSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AvailableSystemSetting) Reset() {
	*x = AvailableSystemSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableSystemSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableSystemSetting) ProtoMessage() {}

func (x *AvailableSystemSetting) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableSystemSetting.ProtoReflect.Descriptor instead.
func (*AvailableSystemSetting) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{1}
}

func (x *AvailableSystemSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListAvailableSystemSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool                      `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AvailableSystemSetting `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAvailableSystemSetting) Reset() {
	*x = ListAvailableSystemSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAvailableSystemSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAvailableSystemSetting) ProtoMessage() {}

func (x *ListAvailableSystemSetting) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAvailableSystemSetting.ProtoReflect.Descriptor instead.
func (*ListAvailableSystemSetting) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{2}
}

func (x *ListAvailableSystemSetting) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAvailableSystemSetting) GetItems() []*AvailableSystemSetting {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeleteSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSystemSettingRequest) Reset() {
	*x = DeleteSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSystemSettingRequest) ProtoMessage() {}

func (x *DeleteSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*DeleteSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSystemSettingRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PatchSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string        `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Id     int32           `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Value  *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PatchSystemSettingRequest) Reset() {
	*x = PatchSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchSystemSettingRequest) ProtoMessage() {}

func (x *PatchSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*PatchSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{4}
}

func (x *PatchSystemSettingRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PatchSystemSettingRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchSystemSettingRequest) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type UpdateSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value *structpb.Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateSystemSettingRequest) Reset() {
	*x = UpdateSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSystemSettingRequest) ProtoMessage() {}

func (x *UpdateSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSystemSettingRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSystemSettingRequest) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type ReadSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadSystemSettingRequest) Reset() {
	*x = ReadSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSystemSettingRequest) ProtoMessage() {}

func (x *ReadSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*ReadSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{6}
}

func (x *ReadSystemSettingRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  SystemSettingName `protobuf:"varint,1,opt,name=name,proto3,enum=engine.SystemSettingName" json:"name,omitempty"`
	Value *structpb.Value   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateSystemSettingRequest) Reset() {
	*x = CreateSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSystemSettingRequest) ProtoMessage() {}

func (x *CreateSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*CreateSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{7}
}

func (x *CreateSystemSettingRequest) GetName() SystemSettingName {
	if x != nil {
		return x.Name
	}
	return SystemSettingName_empty_system_settings_name
}

func (x *CreateSystemSettingRequest) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type SystemSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  SystemSettingName `protobuf:"varint,2,opt,name=name,proto3,enum=engine.SystemSettingName" json:"name,omitempty"`
	Value *structpb.Value   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SystemSetting) Reset() {
	*x = SystemSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemSetting) ProtoMessage() {}

func (x *SystemSetting) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemSetting.ProtoReflect.Descriptor instead.
func (*SystemSetting) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{8}
}

func (x *SystemSetting) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SystemSetting) GetName() SystemSettingName {
	if x != nil {
		return x.Name
	}
	return SystemSettingName_empty_system_settings_name
}

func (x *SystemSetting) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type SearchSystemSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q      string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort   string   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	// Filter by setting names
	Name []SystemSettingName `protobuf:"varint,7,rep,packed,name=name,proto3,enum=engine.SystemSettingName" json:"name,omitempty"`
}

func (x *SearchSystemSettingRequest) Reset() {
	*x = SearchSystemSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSystemSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSystemSettingRequest) ProtoMessage() {}

func (x *SearchSystemSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSystemSettingRequest.ProtoReflect.Descriptor instead.
func (*SearchSystemSettingRequest) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{9}
}

func (x *SearchSystemSettingRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchSystemSettingRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchSystemSettingRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchSystemSettingRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchSystemSettingRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchSystemSettingRequest) GetName() []SystemSettingName {
	if x != nil {
		return x.Name
	}
	return nil
}

type ListSystemSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool             `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*SystemSetting `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListSystemSetting) Reset() {
	*x = ListSystemSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_settings_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSystemSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSystemSetting) ProtoMessage() {}

func (x *ListSystemSetting) ProtoReflect() protoreflect.Message {
	mi := &file_system_settings_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSystemSetting.ProtoReflect.Descriptor instead.
func (*ListSystemSetting) Descriptor() ([]byte, []int) {
	return file_system_settings_proto_rawDescGZIP(), []int{10}
}

func (x *ListSystemSetting) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListSystemSetting) GetItems() []*SystemSetting {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_system_settings_proto protoreflect.FileDescriptor

var file_system_settings_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x23,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x19, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x7c, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xad, 0x01,
	0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2a, 0xac, 0x05, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x6d, 0x6e, 0x69, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x61, 0x6d, 0x64, 0x5f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x32, 0x66, 0x61, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x10,
	0x06, 0x12, 0x18, 0x0a, 0x14, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x61, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x72, 0x65, 0x67, 0x5f, 0x65, 0x78, 0x70, 0x10, 0x09, 0x12, 0x1c, 0x0a, 0x18, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x10, 0x0a, 0x12, 0x1c, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x10, 0x0c, 0x12, 0x1e, 0x0a, 0x1a, 0x69, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x77, 0x62, 0x74, 0x5f, 0x68, 0x69, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x10, 0x0f, 0x12, 0x1f, 0x0a, 0x1b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x10, 0x12, 0x1e, 0x0a, 0x1a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x11, 0x12, 0x1f, 0x0a, 0x1b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x12, 0x12, 0x1e, 0x0a, 0x1a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x13, 0x12, 0x1f, 0x0a, 0x1b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x14, 0x12, 0x1e, 0x0a, 0x1a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x15, 0x12, 0x1d, 0x0a, 0x19, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x10, 0x16, 0x12, 0x1c, 0x0a, 0x18, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x10, 0x17, 0x32, 0x9e, 0x06, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x67, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x12, 0x09, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x8c, 0x01, 0x0a,
	0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x2f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x12, 0x0e, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x6b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x1a, 0x0e,
	0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x69,
	0x0a, 0x12, 0x50, 0x61, 0x74, 0x63, 0x68, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x32, 0x0e, 0x2f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x68, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_settings_proto_rawDescOnce sync.Once
	file_system_settings_proto_rawDescData = file_system_settings_proto_rawDesc
)

func file_system_settings_proto_rawDescGZIP() []byte {
	file_system_settings_proto_rawDescOnce.Do(func() {
		file_system_settings_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_settings_proto_rawDescData)
	})
	return file_system_settings_proto_rawDescData
}

var file_system_settings_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_system_settings_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_system_settings_proto_goTypes = []interface{}{
	(SystemSettingName)(0),                      // 0: engine.SystemSettingName
	(*SearchAvailableSystemSettingRequest)(nil), // 1: engine.SearchAvailableSystemSettingRequest
	(*AvailableSystemSetting)(nil),              // 2: engine.AvailableSystemSetting
	(*ListAvailableSystemSetting)(nil),          // 3: engine.ListAvailableSystemSetting
	(*DeleteSystemSettingRequest)(nil),          // 4: engine.DeleteSystemSettingRequest
	(*PatchSystemSettingRequest)(nil),           // 5: engine.PatchSystemSettingRequest
	(*UpdateSystemSettingRequest)(nil),          // 6: engine.UpdateSystemSettingRequest
	(*ReadSystemSettingRequest)(nil),            // 7: engine.ReadSystemSettingRequest
	(*CreateSystemSettingRequest)(nil),          // 8: engine.CreateSystemSettingRequest
	(*SystemSetting)(nil),                       // 9: engine.SystemSetting
	(*SearchSystemSettingRequest)(nil),          // 10: engine.SearchSystemSettingRequest
	(*ListSystemSetting)(nil),                   // 11: engine.ListSystemSetting
	(*structpb.Value)(nil),                      // 12: google.protobuf.Value
}
var file_system_settings_proto_depIdxs = []int32{
	2,  // 0: engine.ListAvailableSystemSetting.items:type_name -> engine.AvailableSystemSetting
	12, // 1: engine.PatchSystemSettingRequest.value:type_name -> google.protobuf.Value
	12, // 2: engine.UpdateSystemSettingRequest.value:type_name -> google.protobuf.Value
	0,  // 3: engine.CreateSystemSettingRequest.name:type_name -> engine.SystemSettingName
	12, // 4: engine.CreateSystemSettingRequest.value:type_name -> google.protobuf.Value
	0,  // 5: engine.SystemSetting.name:type_name -> engine.SystemSettingName
	12, // 6: engine.SystemSetting.value:type_name -> google.protobuf.Value
	0,  // 7: engine.SearchSystemSettingRequest.name:type_name -> engine.SystemSettingName
	9,  // 8: engine.ListSystemSetting.items:type_name -> engine.SystemSetting
	8,  // 9: engine.SystemSettingService.CreateSystemSetting:input_type -> engine.CreateSystemSettingRequest
	10, // 10: engine.SystemSettingService.SearchSystemSetting:input_type -> engine.SearchSystemSettingRequest
	1,  // 11: engine.SystemSettingService.SearchAvailableSystemSetting:input_type -> engine.SearchAvailableSystemSettingRequest
	7,  // 12: engine.SystemSettingService.ReadSystemSetting:input_type -> engine.ReadSystemSettingRequest
	6,  // 13: engine.SystemSettingService.UpdateSystemSetting:input_type -> engine.UpdateSystemSettingRequest
	5,  // 14: engine.SystemSettingService.PatchSystemSetting:input_type -> engine.PatchSystemSettingRequest
	4,  // 15: engine.SystemSettingService.DeleteSystemSetting:input_type -> engine.DeleteSystemSettingRequest
	9,  // 16: engine.SystemSettingService.CreateSystemSetting:output_type -> engine.SystemSetting
	11, // 17: engine.SystemSettingService.SearchSystemSetting:output_type -> engine.ListSystemSetting
	3,  // 18: engine.SystemSettingService.SearchAvailableSystemSetting:output_type -> engine.ListAvailableSystemSetting
	9,  // 19: engine.SystemSettingService.ReadSystemSetting:output_type -> engine.SystemSetting
	9,  // 20: engine.SystemSettingService.UpdateSystemSetting:output_type -> engine.SystemSetting
	9,  // 21: engine.SystemSettingService.PatchSystemSetting:output_type -> engine.SystemSetting
	9,  // 22: engine.SystemSettingService.DeleteSystemSetting:output_type -> engine.SystemSetting
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_system_settings_proto_init() }
func file_system_settings_proto_init() {
	if File_system_settings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_system_settings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAvailableSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableSystemSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAvailableSystemSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSystemSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_settings_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSystemSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_settings_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_settings_proto_goTypes,
		DependencyIndexes: file_system_settings_proto_depIdxs,
		EnumInfos:         file_system_settings_proto_enumTypes,
		MessageInfos:      file_system_settings_proto_msgTypes,
	}.Build()
	File_system_settings_proto = out.File
	file_system_settings_proto_rawDesc = nil
	file_system_settings_proto_goTypes = nil
	file_system_settings_proto_depIdxs = nil
}
