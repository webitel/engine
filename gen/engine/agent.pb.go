// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: agent.proto

package engine

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Extension string                   `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
	Presence  *UserStatus_UserPresence `protobuf:"bytes,4,opt,name=presence,proto3" json:"presence,omitempty"`
	Status    string                   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *UserStatus) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserStatus) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *UserStatus) GetPresence() *UserStatus_UserPresence {
	if x != nil {
		return x.Presence
	}
	return nil
}

func (x *UserStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SearchUserStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size   int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q      string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort   string   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SearchUserStatusRequest) Reset() {
	*x = SearchUserStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserStatusRequest) ProtoMessage() {}

func (x *SearchUserStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserStatusRequest.ProtoReflect.Descriptor instead.
func (*SearchUserStatusRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *SearchUserStatusRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchUserStatusRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchUserStatusRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchUserStatusRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchUserStatusRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type ListUserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserStatus `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Next  bool          `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *ListUserStatus) Reset() {
	*x = ListUserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserStatus) ProtoMessage() {}

func (x *ListUserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserStatus.ProtoReflect.Descriptor instead.
func (*ListUserStatus) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *ListUserStatus) GetItems() []*UserStatus {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListUserStatus) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type AgentTodayStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int64    `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Fields  []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *AgentTodayStatisticsRequest) Reset() {
	*x = AgentTodayStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTodayStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTodayStatisticsRequest) ProtoMessage() {}

func (x *AgentTodayStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTodayStatisticsRequest.ProtoReflect.Descriptor instead.
func (*AgentTodayStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AgentTodayStatisticsRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentTodayStatisticsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type AgentTodayStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Utilization      float32 `protobuf:"fixed32,1,opt,name=utilization,proto3" json:"utilization,omitempty"`
	Occupancy        float32 `protobuf:"fixed32,2,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
	CallAbandoned    int32   `protobuf:"varint,3,opt,name=call_abandoned,json=callAbandoned,proto3" json:"call_abandoned,omitempty"`
	CallHandled      int32   `protobuf:"varint,4,opt,name=call_handled,json=callHandled,proto3" json:"call_handled,omitempty"`
	AvgTalkSec       float32 `protobuf:"fixed32,5,opt,name=avg_talk_sec,json=avgTalkSec,proto3" json:"avg_talk_sec,omitempty"`
	AvgHoldSec       float32 `protobuf:"fixed32,6,opt,name=avg_hold_sec,json=avgHoldSec,proto3" json:"avg_hold_sec,omitempty"`
	ChatAccepts      int32   `protobuf:"varint,7,opt,name=chat_accepts,json=chatAccepts,proto3" json:"chat_accepts,omitempty"`
	ChatAht          float32 `protobuf:"fixed32,8,opt,name=chat_aht,json=chatAht,proto3" json:"chat_aht,omitempty"`
	CallMissed       int32   `protobuf:"varint,9,opt,name=call_missed,json=callMissed,proto3" json:"call_missed,omitempty"`
	CallInbound      int32   `protobuf:"varint,10,opt,name=call_inbound,json=callInbound,proto3" json:"call_inbound,omitempty"`
	ScoreRequiredAvg float32 `protobuf:"fixed32,11,opt,name=score_required_avg,json=scoreRequiredAvg,proto3" json:"score_required_avg,omitempty"`
	ScoreOptionalAvg float32 `protobuf:"fixed32,12,opt,name=score_optional_avg,json=scoreOptionalAvg,proto3" json:"score_optional_avg,omitempty"`
	ScoreCount       int64   `protobuf:"varint,13,opt,name=score_count,json=scoreCount,proto3" json:"score_count,omitempty"`
	ScoreRequiredSum float32 `protobuf:"fixed32,14,opt,name=score_required_sum,json=scoreRequiredSum,proto3" json:"score_required_sum,omitempty"`
	ScoreOptionalSum float32 `protobuf:"fixed32,15,opt,name=score_optional_sum,json=scoreOptionalSum,proto3" json:"score_optional_sum,omitempty"`
	SumTalkSec       int64   `protobuf:"varint,16,opt,name=sum_talk_sec,json=sumTalkSec,proto3" json:"sum_talk_sec,omitempty"`
	VoiceMail        int32   `protobuf:"varint,17,opt,name=voice_mail,json=voiceMail,proto3" json:"voice_mail,omitempty"`
	Available        int32   `protobuf:"varint,18,opt,name=available,proto3" json:"available,omitempty"`
	Online           int32   `protobuf:"varint,19,opt,name=online,proto3" json:"online,omitempty"`
	Processing       int32   `protobuf:"varint,20,opt,name=processing,proto3" json:"processing,omitempty"`
	TaskAccepts      int32   `protobuf:"varint,21,opt,name=task_accepts,json=taskAccepts,proto3" json:"task_accepts,omitempty"`
	QueueTalkSec     int32   `protobuf:"varint,22,opt,name=queue_talk_sec,json=queueTalkSec,proto3" json:"queue_talk_sec,omitempty"`
	CallQueueMissed  int32   `protobuf:"varint,23,opt,name=call_queue_missed,json=callQueueMissed,proto3" json:"call_queue_missed,omitempty"`
	CallInboundQueue int32   `protobuf:"varint,24,opt,name=call_inbound_queue,json=callInboundQueue,proto3" json:"call_inbound_queue,omitempty"`
	CallDialerQueue  int32   `protobuf:"varint,25,opt,name=call_dialer_queue,json=callDialerQueue,proto3" json:"call_dialer_queue,omitempty"`
	CallManual       int32   `protobuf:"varint,26,opt,name=call_manual,json=callManual,proto3" json:"call_manual,omitempty"`
}

func (x *AgentTodayStatisticsResponse) Reset() {
	*x = AgentTodayStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTodayStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTodayStatisticsResponse) ProtoMessage() {}

func (x *AgentTodayStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTodayStatisticsResponse.ProtoReflect.Descriptor instead.
func (*AgentTodayStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *AgentTodayStatisticsResponse) GetUtilization() float32 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetOccupancy() float32 {
	if x != nil {
		return x.Occupancy
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallAbandoned() int32 {
	if x != nil {
		return x.CallAbandoned
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallHandled() int32 {
	if x != nil {
		return x.CallHandled
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetAvgTalkSec() float32 {
	if x != nil {
		return x.AvgTalkSec
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetAvgHoldSec() float32 {
	if x != nil {
		return x.AvgHoldSec
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetChatAccepts() int32 {
	if x != nil {
		return x.ChatAccepts
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetChatAht() float32 {
	if x != nil {
		return x.ChatAht
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallMissed() int32 {
	if x != nil {
		return x.CallMissed
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallInbound() int32 {
	if x != nil {
		return x.CallInbound
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetScoreRequiredAvg() float32 {
	if x != nil {
		return x.ScoreRequiredAvg
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetScoreOptionalAvg() float32 {
	if x != nil {
		return x.ScoreOptionalAvg
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetScoreCount() int64 {
	if x != nil {
		return x.ScoreCount
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetScoreRequiredSum() float32 {
	if x != nil {
		return x.ScoreRequiredSum
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetScoreOptionalSum() float32 {
	if x != nil {
		return x.ScoreOptionalSum
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetSumTalkSec() int64 {
	if x != nil {
		return x.SumTalkSec
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetVoiceMail() int32 {
	if x != nil {
		return x.VoiceMail
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetOnline() int32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetProcessing() int32 {
	if x != nil {
		return x.Processing
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetTaskAccepts() int32 {
	if x != nil {
		return x.TaskAccepts
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetQueueTalkSec() int32 {
	if x != nil {
		return x.QueueTalkSec
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallQueueMissed() int32 {
	if x != nil {
		return x.CallQueueMissed
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallInboundQueue() int32 {
	if x != nil {
		return x.CallInboundQueue
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallDialerQueue() int32 {
	if x != nil {
		return x.CallDialerQueue
	}
	return 0
}

func (x *AgentTodayStatisticsResponse) GetCallManual() int32 {
	if x != nil {
		return x.CallManual
	}
	return 0
}

type SearchAgentStatusStatisticItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int64          `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Time    *FilterBetween `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SearchAgentStatusStatisticItemRequest) Reset() {
	*x = SearchAgentStatusStatisticItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentStatusStatisticItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentStatusStatisticItemRequest) ProtoMessage() {}

func (x *SearchAgentStatusStatisticItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentStatusStatisticItemRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentStatusStatisticItemRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *SearchAgentStatusStatisticItemRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *SearchAgentStatusStatisticItemRequest) GetTime() *FilterBetween {
	if x != nil {
		return x.Time
	}
	return nil
}

type AgentStatusStatisticItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId          int32     `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Name             string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status           string    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	StatusDuration   int64     `protobuf:"varint,4,opt,name=status_duration,json=statusDuration,proto3" json:"status_duration,omitempty"`
	User             *Lookup   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Extension        string    `protobuf:"bytes,6,opt,name=extension,proto3" json:"extension,omitempty"`
	Team             *Lookup   `protobuf:"bytes,7,opt,name=team,proto3" json:"team,omitempty"`
	Supervisor       []*Lookup `protobuf:"bytes,8,rep,name=supervisor,proto3" json:"supervisor,omitempty"`
	Auditor          []*Lookup `protobuf:"bytes,9,rep,name=auditor,proto3" json:"auditor,omitempty"`
	Region           *Lookup   `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	ProgressiveCount uint32    `protobuf:"varint,11,opt,name=progressive_count,json=progressiveCount,proto3" json:"progressive_count,omitempty"`
	ChatCount        uint32    `protobuf:"varint,12,opt,name=chat_count,json=chatCount,proto3" json:"chat_count,omitempty"`
	PauseCause       string    `protobuf:"bytes,13,opt,name=pause_cause,json=pauseCause,proto3" json:"pause_cause,omitempty"`
	Online           int64     `protobuf:"varint,14,opt,name=online,proto3" json:"online,omitempty"`
	Offline          int64     `protobuf:"varint,15,opt,name=offline,proto3" json:"offline,omitempty"`
	Pause            int64     `protobuf:"varint,16,opt,name=pause,proto3" json:"pause,omitempty"`
	ScoreRequiredAvg float32   `protobuf:"fixed32,17,opt,name=score_required_avg,json=scoreRequiredAvg,proto3" json:"score_required_avg,omitempty"`
	ScoreOptionalAvg float32   `protobuf:"fixed32,18,opt,name=score_optional_avg,json=scoreOptionalAvg,proto3" json:"score_optional_avg,omitempty"`
	ScoreCount       int64     `protobuf:"varint,19,opt,name=score_count,json=scoreCount,proto3" json:"score_count,omitempty"`
}

func (x *AgentStatusStatisticItem) Reset() {
	*x = AgentStatusStatisticItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStatusStatisticItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatusStatisticItem) ProtoMessage() {}

func (x *AgentStatusStatisticItem) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatusStatisticItem.ProtoReflect.Descriptor instead.
func (*AgentStatusStatisticItem) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *AgentStatusStatisticItem) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentStatusStatisticItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AgentStatusStatisticItem) GetStatusDuration() int64 {
	if x != nil {
		return x.StatusDuration
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AgentStatusStatisticItem) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *AgentStatusStatisticItem) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AgentStatusStatisticItem) GetSupervisor() []*Lookup {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *AgentStatusStatisticItem) GetAuditor() []*Lookup {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *AgentStatusStatisticItem) GetRegion() *Lookup {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *AgentStatusStatisticItem) GetProgressiveCount() uint32 {
	if x != nil {
		return x.ProgressiveCount
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetChatCount() uint32 {
	if x != nil {
		return x.ChatCount
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetPauseCause() string {
	if x != nil {
		return x.PauseCause
	}
	return ""
}

func (x *AgentStatusStatisticItem) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetOffline() int64 {
	if x != nil {
		return x.Offline
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetPause() int64 {
	if x != nil {
		return x.Pause
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetScoreRequiredAvg() float32 {
	if x != nil {
		return x.ScoreRequiredAvg
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetScoreOptionalAvg() float32 {
	if x != nil {
		return x.ScoreOptionalAvg
	}
	return 0
}

func (x *AgentStatusStatisticItem) GetScoreCount() int64 {
	if x != nil {
		return x.ScoreCount
	}
	return 0
}

type SearchPauseCauseForAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId     int64 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	AllowChange bool  `protobuf:"varint,2,opt,name=allow_change,json=allowChange,proto3" json:"allow_change,omitempty"`
}

func (x *SearchPauseCauseForAgentRequest) Reset() {
	*x = SearchPauseCauseForAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPauseCauseForAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPauseCauseForAgentRequest) ProtoMessage() {}

func (x *SearchPauseCauseForAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPauseCauseForAgentRequest.ProtoReflect.Descriptor instead.
func (*SearchPauseCauseForAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *SearchPauseCauseForAgentRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *SearchPauseCauseForAgentRequest) GetAllowChange() bool {
	if x != nil {
		return x.AllowChange
	}
	return false
}

type ForAgentPauseCause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LimitMin    uint32 `protobuf:"varint,3,opt,name=limit_min,json=limitMin,proto3" json:"limit_min,omitempty"`
	DurationMin uint32 `protobuf:"varint,4,opt,name=duration_min,json=durationMin,proto3" json:"duration_min,omitempty"`
}

func (x *ForAgentPauseCause) Reset() {
	*x = ForAgentPauseCause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForAgentPauseCause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForAgentPauseCause) ProtoMessage() {}

func (x *ForAgentPauseCause) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForAgentPauseCause.ProtoReflect.Descriptor instead.
func (*ForAgentPauseCause) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *ForAgentPauseCause) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ForAgentPauseCause) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ForAgentPauseCause) GetLimitMin() uint32 {
	if x != nil {
		return x.LimitMin
	}
	return 0
}

func (x *ForAgentPauseCause) GetDurationMin() uint32 {
	if x != nil {
		return x.DurationMin
	}
	return 0
}

type ForAgentPauseCauseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ForAgentPauseCause `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ForAgentPauseCauseList) Reset() {
	*x = ForAgentPauseCauseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForAgentPauseCauseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForAgentPauseCauseList) ProtoMessage() {}

func (x *ForAgentPauseCauseList) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForAgentPauseCauseList.ProtoReflect.Descriptor instead.
func (*ForAgentPauseCauseList) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *ForAgentPauseCauseList) GetItems() []*ForAgentPauseCause {
	if x != nil {
		return x.Items
	}
	return nil
}

type AgentSetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int32 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *AgentSetStateRequest) Reset() {
	*x = AgentSetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentSetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentSetStateRequest) ProtoMessage() {}

func (x *AgentSetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentSetStateRequest.ProtoReflect.Descriptor instead.
func (*AgentSetStateRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *AgentSetStateRequest) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type AgentSetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentSetStateResponse) Reset() {
	*x = AgentSetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentSetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentSetStateResponse) ProtoMessage() {}

func (x *AgentSetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentSetStateResponse.ProtoReflect.Descriptor instead.
func (*AgentSetStateResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{11}
}

type AgentStatsStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId        int32     `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Name           string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status         string    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	StatusDuration int64     `protobuf:"varint,4,opt,name=status_duration,json=statusDuration,proto3" json:"status_duration,omitempty"`
	User           *Lookup   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Extension      string    `protobuf:"bytes,6,opt,name=extension,proto3" json:"extension,omitempty"`
	Team           *Lookup   `protobuf:"bytes,7,opt,name=team,proto3" json:"team,omitempty"`
	Queues         []*Lookup `protobuf:"bytes,8,rep,name=queues,proto3" json:"queues,omitempty"`
	Online         int64     `protobuf:"varint,9,opt,name=online,proto3" json:"online,omitempty"`
	Offline        int64     `protobuf:"varint,10,opt,name=offline,proto3" json:"offline,omitempty"`
	Pause          int64     `protobuf:"varint,11,opt,name=pause,proto3" json:"pause,omitempty"`
	Utilization    float32   `protobuf:"fixed32,12,opt,name=utilization,proto3" json:"utilization,omitempty"`
	CallTime       int64     `protobuf:"varint,13,opt,name=call_time,json=callTime,proto3" json:"call_time,omitempty"`
	Handles        int32     `protobuf:"varint,14,opt,name=handles,proto3" json:"handles,omitempty"`
	Missed         int32     `protobuf:"varint,15,opt,name=missed,proto3" json:"missed,omitempty"`
	ChatCount      int32     `protobuf:"varint,16,opt,name=chat_count,json=chatCount,proto3" json:"chat_count,omitempty"`
	MaxBridgedAt   int64     `protobuf:"varint,17,opt,name=max_bridged_at,json=maxBridgedAt,proto3" json:"max_bridged_at,omitempty"`
	MaxOfferingAt  int64     `protobuf:"varint,18,opt,name=max_offering_at,json=maxOfferingAt,proto3" json:"max_offering_at,omitempty"`
	ActiveCallId   string    `protobuf:"bytes,19,opt,name=active_call_id,json=activeCallId,proto3" json:"active_call_id,omitempty"`
	Transferred    uint32    `protobuf:"varint,20,opt,name=transferred,proto3" json:"transferred,omitempty"`
	Skills         []*Lookup `protobuf:"bytes,21,rep,name=skills,proto3" json:"skills,omitempty"`
	Supervisor     []*Lookup `protobuf:"bytes,22,rep,name=supervisor,proto3" json:"supervisor,omitempty"`
	Auditor        []*Lookup `protobuf:"bytes,23,rep,name=auditor,proto3" json:"auditor,omitempty"`
	PauseCause     string    `protobuf:"bytes,24,opt,name=pause_cause,json=pauseCause,proto3" json:"pause_cause,omitempty"`
	Occupancy      float32   `protobuf:"fixed32,25,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
}

func (x *AgentStatsStatistic) Reset() {
	*x = AgentStatsStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStatsStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatsStatistic) ProtoMessage() {}

func (x *AgentStatsStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatsStatistic.ProtoReflect.Descriptor instead.
func (*AgentStatsStatistic) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{12}
}

func (x *AgentStatsStatistic) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentStatsStatistic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentStatsStatistic) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AgentStatsStatistic) GetStatusDuration() int64 {
	if x != nil {
		return x.StatusDuration
	}
	return 0
}

func (x *AgentStatsStatistic) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AgentStatsStatistic) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *AgentStatsStatistic) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AgentStatsStatistic) GetQueues() []*Lookup {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *AgentStatsStatistic) GetOnline() int64 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *AgentStatsStatistic) GetOffline() int64 {
	if x != nil {
		return x.Offline
	}
	return 0
}

func (x *AgentStatsStatistic) GetPause() int64 {
	if x != nil {
		return x.Pause
	}
	return 0
}

func (x *AgentStatsStatistic) GetUtilization() float32 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

func (x *AgentStatsStatistic) GetCallTime() int64 {
	if x != nil {
		return x.CallTime
	}
	return 0
}

func (x *AgentStatsStatistic) GetHandles() int32 {
	if x != nil {
		return x.Handles
	}
	return 0
}

func (x *AgentStatsStatistic) GetMissed() int32 {
	if x != nil {
		return x.Missed
	}
	return 0
}

func (x *AgentStatsStatistic) GetChatCount() int32 {
	if x != nil {
		return x.ChatCount
	}
	return 0
}

func (x *AgentStatsStatistic) GetMaxBridgedAt() int64 {
	if x != nil {
		return x.MaxBridgedAt
	}
	return 0
}

func (x *AgentStatsStatistic) GetMaxOfferingAt() int64 {
	if x != nil {
		return x.MaxOfferingAt
	}
	return 0
}

func (x *AgentStatsStatistic) GetActiveCallId() string {
	if x != nil {
		return x.ActiveCallId
	}
	return ""
}

func (x *AgentStatsStatistic) GetTransferred() uint32 {
	if x != nil {
		return x.Transferred
	}
	return 0
}

func (x *AgentStatsStatistic) GetSkills() []*Lookup {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *AgentStatsStatistic) GetSupervisor() []*Lookup {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *AgentStatsStatistic) GetAuditor() []*Lookup {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *AgentStatsStatistic) GetPauseCause() string {
	if x != nil {
		return x.PauseCause
	}
	return ""
}

func (x *AgentStatsStatistic) GetOccupancy() float32 {
	if x != nil {
		return x.Occupancy
	}
	return 0
}

type ListAgentStatsStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool                   `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AgentStatsStatistic `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAgentStatsStatistic) Reset() {
	*x = ListAgentStatsStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentStatsStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentStatsStatistic) ProtoMessage() {}

func (x *ListAgentStatsStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentStatsStatistic.ProtoReflect.Descriptor instead.
func (*ListAgentStatsStatistic) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{13}
}

func (x *ListAgentStatsStatistic) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAgentStatsStatistic) GetItems() []*AgentStatsStatistic {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchAgentStatusStatisticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         int32          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size         int32          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q            string         `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort         string         `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields       []string       `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	AgentId      []int64        `protobuf:"varint,6,rep,packed,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Time         *FilterBetween `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	Status       []string       `protobuf:"bytes,8,rep,name=status,proto3" json:"status,omitempty"`
	QueueId      []int32        `protobuf:"varint,9,rep,packed,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	TeamId       []int32        `protobuf:"varint,10,rep,packed,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Utilization  *FilterBetween `protobuf:"bytes,11,opt,name=utilization,proto3" json:"utilization,omitempty"`
	HasCall      bool           `protobuf:"varint,12,opt,name=has_call,json=hasCall,proto3" json:"has_call,omitempty"`
	SkillId      []uint32       `protobuf:"varint,13,rep,packed,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	RegionId     []uint32       `protobuf:"varint,14,rep,packed,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	SupervisorId []uint32       `protobuf:"varint,15,rep,packed,name=supervisor_id,json=supervisorId,proto3" json:"supervisor_id,omitempty"`
	AuditorId    []int64        `protobuf:"varint,16,rep,packed,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
}

func (x *SearchAgentStatusStatisticRequest) Reset() {
	*x = SearchAgentStatusStatisticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentStatusStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentStatusStatisticRequest) ProtoMessage() {}

func (x *SearchAgentStatusStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentStatusStatisticRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentStatusStatisticRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{14}
}

func (x *SearchAgentStatusStatisticRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAgentStatusStatisticRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAgentStatusStatisticRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchAgentStatusStatisticRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchAgentStatusStatisticRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetAgentId() []int64 {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetTime() *FilterBetween {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetStatus() []string {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetQueueId() []int32 {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetTeamId() []int32 {
	if x != nil {
		return x.TeamId
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetUtilization() *FilterBetween {
	if x != nil {
		return x.Utilization
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetHasCall() bool {
	if x != nil {
		return x.HasCall
	}
	return false
}

func (x *SearchAgentStatusStatisticRequest) GetSkillId() []uint32 {
	if x != nil {
		return x.SkillId
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetRegionId() []uint32 {
	if x != nil {
		return x.RegionId
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetSupervisorId() []uint32 {
	if x != nil {
		return x.SupervisorId
	}
	return nil
}

func (x *SearchAgentStatusStatisticRequest) GetAuditorId() []int64 {
	if x != nil {
		return x.AuditorId
	}
	return nil
}

type SearchAgentStateHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	JoinedAt *FilterBetween `protobuf:"bytes,3,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	AgentId  []int64        `protobuf:"varint,4,rep,packed,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Sort     string         `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	DomainId int64          `protobuf:"varint,6,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	FromId   int64          `protobuf:"varint,7,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
}

func (x *SearchAgentStateHistoryRequest) Reset() {
	*x = SearchAgentStateHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentStateHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentStateHistoryRequest) ProtoMessage() {}

func (x *SearchAgentStateHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentStateHistoryRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentStateHistoryRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{15}
}

func (x *SearchAgentStateHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAgentStateHistoryRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAgentStateHistoryRequest) GetJoinedAt() *FilterBetween {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *SearchAgentStateHistoryRequest) GetAgentId() []int64 {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SearchAgentStateHistoryRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchAgentStateHistoryRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *SearchAgentStateHistoryRequest) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

type AgentCallStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count       int32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Abandoned   int32   `protobuf:"varint,3,opt,name=abandoned,proto3" json:"abandoned,omitempty"`
	Handles     int32   `protobuf:"varint,4,opt,name=handles,proto3" json:"handles,omitempty"`
	SumTalkSec  float32 `protobuf:"fixed32,5,opt,name=sum_talk_sec,json=sumTalkSec,proto3" json:"sum_talk_sec,omitempty"`
	AvgTalkSec  float32 `protobuf:"fixed32,6,opt,name=avg_talk_sec,json=avgTalkSec,proto3" json:"avg_talk_sec,omitempty"`
	MinTalkSec  float32 `protobuf:"fixed32,7,opt,name=min_talk_sec,json=minTalkSec,proto3" json:"min_talk_sec,omitempty"`
	MaxTalkSec  float32 `protobuf:"fixed32,8,opt,name=max_talk_sec,json=maxTalkSec,proto3" json:"max_talk_sec,omitempty"`
	SumHoldSec  float32 `protobuf:"fixed32,9,opt,name=sum_hold_sec,json=sumHoldSec,proto3" json:"sum_hold_sec,omitempty"`
	AvgHoldSec  float32 `protobuf:"fixed32,10,opt,name=avg_hold_sec,json=avgHoldSec,proto3" json:"avg_hold_sec,omitempty"`
	MinHoldSec  float32 `protobuf:"fixed32,11,opt,name=min_hold_sec,json=minHoldSec,proto3" json:"min_hold_sec,omitempty"`
	MaxHoldSec  float32 `protobuf:"fixed32,12,opt,name=max_hold_sec,json=maxHoldSec,proto3" json:"max_hold_sec,omitempty"`
	Utilization float32 `protobuf:"fixed32,13,opt,name=utilization,proto3" json:"utilization,omitempty"`
	Occupancy   float32 `protobuf:"fixed32,14,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
	ChatAccepts int32   `protobuf:"varint,15,opt,name=chat_accepts,json=chatAccepts,proto3" json:"chat_accepts,omitempty"`
	ChatAht     int32   `protobuf:"varint,16,opt,name=chat_aht,json=chatAht,proto3" json:"chat_aht,omitempty"`
}

func (x *AgentCallStatistics) Reset() {
	*x = AgentCallStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCallStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCallStatistics) ProtoMessage() {}

func (x *AgentCallStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCallStatistics.ProtoReflect.Descriptor instead.
func (*AgentCallStatistics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{16}
}

func (x *AgentCallStatistics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentCallStatistics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AgentCallStatistics) GetAbandoned() int32 {
	if x != nil {
		return x.Abandoned
	}
	return 0
}

func (x *AgentCallStatistics) GetHandles() int32 {
	if x != nil {
		return x.Handles
	}
	return 0
}

func (x *AgentCallStatistics) GetSumTalkSec() float32 {
	if x != nil {
		return x.SumTalkSec
	}
	return 0
}

func (x *AgentCallStatistics) GetAvgTalkSec() float32 {
	if x != nil {
		return x.AvgTalkSec
	}
	return 0
}

func (x *AgentCallStatistics) GetMinTalkSec() float32 {
	if x != nil {
		return x.MinTalkSec
	}
	return 0
}

func (x *AgentCallStatistics) GetMaxTalkSec() float32 {
	if x != nil {
		return x.MaxTalkSec
	}
	return 0
}

func (x *AgentCallStatistics) GetSumHoldSec() float32 {
	if x != nil {
		return x.SumHoldSec
	}
	return 0
}

func (x *AgentCallStatistics) GetAvgHoldSec() float32 {
	if x != nil {
		return x.AvgHoldSec
	}
	return 0
}

func (x *AgentCallStatistics) GetMinHoldSec() float32 {
	if x != nil {
		return x.MinHoldSec
	}
	return 0
}

func (x *AgentCallStatistics) GetMaxHoldSec() float32 {
	if x != nil {
		return x.MaxHoldSec
	}
	return 0
}

func (x *AgentCallStatistics) GetUtilization() float32 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

func (x *AgentCallStatistics) GetOccupancy() float32 {
	if x != nil {
		return x.Occupancy
	}
	return 0
}

func (x *AgentCallStatistics) GetChatAccepts() int32 {
	if x != nil {
		return x.ChatAccepts
	}
	return 0
}

func (x *AgentCallStatistics) GetChatAht() int32 {
	if x != nil {
		return x.ChatAht
	}
	return 0
}

type SearchAgentCallStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32          `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Time     *FilterBetween `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	AgentId  []int32        `protobuf:"varint,4,rep,packed,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DomainId int64          `protobuf:"varint,5,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Q        string         `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	Fields   []string       `protobuf:"bytes,7,rep,name=fields,proto3" json:"fields,omitempty"`
	Sort     string         `protobuf:"bytes,8,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *SearchAgentCallStatisticsRequest) Reset() {
	*x = SearchAgentCallStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentCallStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentCallStatisticsRequest) ProtoMessage() {}

func (x *SearchAgentCallStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentCallStatisticsRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentCallStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{17}
}

func (x *SearchAgentCallStatisticsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAgentCallStatisticsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAgentCallStatisticsRequest) GetTime() *FilterBetween {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *SearchAgentCallStatisticsRequest) GetAgentId() []int32 {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SearchAgentCallStatisticsRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *SearchAgentCallStatisticsRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchAgentCallStatisticsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchAgentCallStatisticsRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type AgentCallStatisticsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool                   `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AgentCallStatistics `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AgentCallStatisticsList) Reset() {
	*x = AgentCallStatisticsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCallStatisticsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCallStatisticsList) ProtoMessage() {}

func (x *AgentCallStatisticsList) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCallStatisticsList.ProtoReflect.Descriptor instead.
func (*AgentCallStatisticsList) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{18}
}

func (x *AgentCallStatisticsList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *AgentCallStatisticsList) GetItems() []*AgentCallStatistics {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchAgentInQueueStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  int64 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	DomainId int64 `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *SearchAgentInQueueStatisticsRequest) Reset() {
	*x = SearchAgentInQueueStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentInQueueStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentInQueueStatisticsRequest) ProtoMessage() {}

func (x *SearchAgentInQueueStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentInQueueStatisticsRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentInQueueStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{19}
}

func (x *SearchAgentInQueueStatisticsRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *SearchAgentInQueueStatisticsRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type AgentInQueueStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue      *Lookup                                              `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Statistics []*AgentInQueueStatistics_AgentInQueueStatisticsItem `protobuf:"bytes,2,rep,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *AgentInQueueStatistics) Reset() {
	*x = AgentInQueueStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInQueueStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInQueueStatistics) ProtoMessage() {}

func (x *AgentInQueueStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInQueueStatistics.ProtoReflect.Descriptor instead.
func (*AgentInQueueStatistics) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{20}
}

func (x *AgentInQueueStatistics) GetQueue() *Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *AgentInQueueStatistics) GetStatistics() []*AgentInQueueStatistics_AgentInQueueStatisticsItem {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type AgentInQueueStatisticsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AgentInQueueStatistics `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AgentInQueueStatisticsList) Reset() {
	*x = AgentInQueueStatisticsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInQueueStatisticsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInQueueStatisticsList) ProtoMessage() {}

func (x *AgentInQueueStatisticsList) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInQueueStatisticsList.ProtoReflect.Descriptor instead.
func (*AgentInQueueStatisticsList) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{21}
}

func (x *AgentInQueueStatisticsList) GetItems() []*AgentInQueueStatistics {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListAgentUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool         `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AgentUser `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAgentUser) Reset() {
	*x = ListAgentUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentUser) ProtoMessage() {}

func (x *ListAgentUser) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentUser.ProtoReflect.Descriptor instead.
func (*ListAgentUser) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{22}
}

func (x *ListAgentUser) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAgentUser) GetItems() []*AgentUser {
	if x != nil {
		return x.Items
	}
	return nil
}

type AgentUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AgentUser) Reset() {
	*x = AgentUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentUser) ProtoMessage() {}

func (x *AgentUser) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentUser.ProtoReflect.Descriptor instead.
func (*AgentUser) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{23}
}

func (x *AgentUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SearchLookupUsersAgentNotExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q        string `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	DomainId int64  `protobuf:"varint,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *SearchLookupUsersAgentNotExistsRequest) Reset() {
	*x = SearchLookupUsersAgentNotExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLookupUsersAgentNotExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLookupUsersAgentNotExistsRequest) ProtoMessage() {}

func (x *SearchLookupUsersAgentNotExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLookupUsersAgentNotExistsRequest.ProtoReflect.Descriptor instead.
func (*SearchLookupUsersAgentNotExistsRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{24}
}

func (x *SearchLookupUsersAgentNotExistsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchLookupUsersAgentNotExistsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchLookupUsersAgentNotExistsRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchLookupUsersAgentNotExistsRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type AgentStateHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  int64  `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	TimeFrom int64  `protobuf:"varint,4,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo   int64  `protobuf:"varint,5,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
	Q        string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	DomainId int64  `protobuf:"varint,7,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *AgentStateHistoryRequest) Reset() {
	*x = AgentStateHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStateHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStateHistoryRequest) ProtoMessage() {}

func (x *AgentStateHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStateHistoryRequest.ProtoReflect.Descriptor instead.
func (*AgentStateHistoryRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{25}
}

func (x *AgentStateHistoryRequest) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *AgentStateHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AgentStateHistoryRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AgentStateHistoryRequest) GetTimeFrom() int64 {
	if x != nil {
		return x.TimeFrom
	}
	return 0
}

func (x *AgentStateHistoryRequest) GetTimeTo() int64 {
	if x != nil {
		return x.TimeTo
	}
	return 0
}

func (x *AgentStateHistoryRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *AgentStateHistoryRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type AgentState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Channel    string  `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	JoinedAt   int64   `protobuf:"varint,3,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	State      string  `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Payload    string  `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Duration   int64   `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Queue      *Lookup `protobuf:"bytes,7,opt,name=queue,proto3" json:"queue,omitempty"`
	Agent      *Lookup `protobuf:"bytes,8,opt,name=agent,proto3" json:"agent,omitempty"`
	PauseCause string  `protobuf:"bytes,9,opt,name=pause_cause,json=pauseCause,proto3" json:"pause_cause,omitempty"`
}

func (x *AgentState) Reset() {
	*x = AgentState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentState) ProtoMessage() {}

func (x *AgentState) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentState.ProtoReflect.Descriptor instead.
func (*AgentState) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{26}
}

func (x *AgentState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentState) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *AgentState) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

func (x *AgentState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AgentState) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *AgentState) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AgentState) GetQueue() *Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *AgentState) GetAgent() *Lookup {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *AgentState) GetPauseCause() string {
	if x != nil {
		return x.PauseCause
	}
	return ""
}

type ListAgentStateHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool          `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AgentState `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAgentStateHistory) Reset() {
	*x = ListAgentStateHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentStateHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentStateHistory) ProtoMessage() {}

func (x *ListAgentStateHistory) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentStateHistory.ProtoReflect.Descriptor instead.
func (*ListAgentStateHistory) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{27}
}

func (x *ListAgentStateHistory) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAgentStateHistory) GetItems() []*AgentState {
	if x != nil {
		return x.Items
	}
	return nil
}

type AgentInQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue          *Lookup                     `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Priority       int32                       `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Type           int32                       `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Strategy       string                      `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Enabled        bool                        `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CountMembers   int32                       `protobuf:"varint,6,opt,name=count_members,json=countMembers,proto3" json:"count_members,omitempty"`
	WaitingMembers int32                       `protobuf:"varint,7,opt,name=waiting_members,json=waitingMembers,proto3" json:"waiting_members,omitempty"`
	ActiveMembers  int32                       `protobuf:"varint,8,opt,name=active_members,json=activeMembers,proto3" json:"active_members,omitempty"`
	Agents         *AgentInQueue_AgentsInQueue `protobuf:"bytes,9,opt,name=agents,proto3" json:"agents,omitempty"`
	MaxMemberLimit int32                       `protobuf:"varint,10,opt,name=max_member_limit,json=maxMemberLimit,proto3" json:"max_member_limit,omitempty"`
}

func (x *AgentInQueue) Reset() {
	*x = AgentInQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInQueue) ProtoMessage() {}

func (x *AgentInQueue) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInQueue.ProtoReflect.Descriptor instead.
func (*AgentInQueue) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{28}
}

func (x *AgentInQueue) GetQueue() *Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *AgentInQueue) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *AgentInQueue) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AgentInQueue) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *AgentInQueue) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AgentInQueue) GetCountMembers() int32 {
	if x != nil {
		return x.CountMembers
	}
	return 0
}

func (x *AgentInQueue) GetWaitingMembers() int32 {
	if x != nil {
		return x.WaitingMembers
	}
	return 0
}

func (x *AgentInQueue) GetActiveMembers() int32 {
	if x != nil {
		return x.ActiveMembers
	}
	return 0
}

func (x *AgentInQueue) GetAgents() *AgentInQueue_AgentsInQueue {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *AgentInQueue) GetMaxMemberLimit() int32 {
	if x != nil {
		return x.MaxMemberLimit
	}
	return 0
}

type ListAgentInQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool            `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AgentInQueue `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAgentInQueue) Reset() {
	*x = ListAgentInQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentInQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentInQueue) ProtoMessage() {}

func (x *ListAgentInQueue) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentInQueue.ProtoReflect.Descriptor instead.
func (*ListAgentInQueue) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{29}
}

func (x *ListAgentInQueue) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAgentInQueue) GetItems() []*AgentInQueue {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchAgentInQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page   int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size   int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Q      string   `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	Sort   string   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *SearchAgentInQueueRequest) Reset() {
	*x = SearchAgentInQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentInQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentInQueueRequest) ProtoMessage() {}

func (x *SearchAgentInQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentInQueueRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentInQueueRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{30}
}

func (x *SearchAgentInQueueRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchAgentInQueueRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAgentInQueueRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAgentInQueueRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchAgentInQueueRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchAgentInQueueRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchAgentInTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Q        string `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	DomainId int64  `protobuf:"varint,5,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *SearchAgentInTeamRequest) Reset() {
	*x = SearchAgentInTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentInTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentInTeamRequest) ProtoMessage() {}

func (x *SearchAgentInTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentInTeamRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentInTeamRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{31}
}

func (x *SearchAgentInTeamRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchAgentInTeamRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAgentInTeamRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAgentInTeamRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchAgentInTeamRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type AgentInTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team     *Lookup `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Strategy string  `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
}

func (x *AgentInTeam) Reset() {
	*x = AgentInTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInTeam) ProtoMessage() {}

func (x *AgentInTeam) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInTeam.ProtoReflect.Descriptor instead.
func (*AgentInTeam) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{32}
}

func (x *AgentInTeam) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AgentInTeam) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

type ListAgentInTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool           `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*AgentInTeam `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAgentInTeam) Reset() {
	*x = ListAgentInTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentInTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentInTeam) ProtoMessage() {}

func (x *ListAgentInTeam) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentInTeam.ProtoReflect.Descriptor instead.
func (*ListAgentInTeam) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{33}
}

func (x *ListAgentInTeam) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAgentInTeam) GetItems() []*AgentInTeam {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User             *Lookup   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Description      string    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ProgressiveCount int32     `protobuf:"varint,4,opt,name=progressive_count,json=progressiveCount,proto3" json:"progressive_count,omitempty"`
	GreetingMedia    *Lookup   `protobuf:"bytes,5,opt,name=greeting_media,json=greetingMedia,proto3" json:"greeting_media,omitempty"`
	DomainId         int64     `protobuf:"varint,6,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	AllowChannels    []string  `protobuf:"bytes,7,rep,name=allow_channels,json=allowChannels,proto3" json:"allow_channels,omitempty"`
	ChatCount        uint32    `protobuf:"varint,8,opt,name=chat_count,json=chatCount,proto3" json:"chat_count,omitempty"`
	Supervisor       []*Lookup `protobuf:"bytes,9,rep,name=supervisor,proto3" json:"supervisor,omitempty"`
	Team             *Lookup   `protobuf:"bytes,10,opt,name=team,proto3" json:"team,omitempty"`
	Region           *Lookup   `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`
	Auditor          []*Lookup `protobuf:"bytes,12,rep,name=auditor,proto3" json:"auditor,omitempty"`
	IsSupervisor     bool      `protobuf:"varint,13,opt,name=is_supervisor,json=isSupervisor,proto3" json:"is_supervisor,omitempty"`
	TaskCount        uint32    `protobuf:"varint,14,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
}

func (x *UpdateAgentRequest) Reset() {
	*x = UpdateAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAgentRequest) ProtoMessage() {}

func (x *UpdateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAgentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateAgentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAgentRequest) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateAgentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAgentRequest) GetProgressiveCount() int32 {
	if x != nil {
		return x.ProgressiveCount
	}
	return 0
}

func (x *UpdateAgentRequest) GetGreetingMedia() *Lookup {
	if x != nil {
		return x.GreetingMedia
	}
	return nil
}

func (x *UpdateAgentRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *UpdateAgentRequest) GetAllowChannels() []string {
	if x != nil {
		return x.AllowChannels
	}
	return nil
}

func (x *UpdateAgentRequest) GetChatCount() uint32 {
	if x != nil {
		return x.ChatCount
	}
	return 0
}

func (x *UpdateAgentRequest) GetSupervisor() []*Lookup {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *UpdateAgentRequest) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *UpdateAgentRequest) GetRegion() *Lookup {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *UpdateAgentRequest) GetAuditor() []*Lookup {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *UpdateAgentRequest) GetIsSupervisor() bool {
	if x != nil {
		return x.IsSupervisor
	}
	return false
}

func (x *UpdateAgentRequest) GetTaskCount() uint32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

type PatchAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields           []string  `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Id               int64     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	User             *Lookup   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Description      string    `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ProgressiveCount int32     `protobuf:"varint,5,opt,name=progressive_count,json=progressiveCount,proto3" json:"progressive_count,omitempty"`
	GreetingMedia    *Lookup   `protobuf:"bytes,6,opt,name=greeting_media,json=greetingMedia,proto3" json:"greeting_media,omitempty"`
	AllowChannels    []string  `protobuf:"bytes,7,rep,name=allow_channels,json=allowChannels,proto3" json:"allow_channels,omitempty"`
	ChatCount        uint32    `protobuf:"varint,8,opt,name=chat_count,json=chatCount,proto3" json:"chat_count,omitempty"`
	Supervisor       []*Lookup `protobuf:"bytes,9,rep,name=supervisor,proto3" json:"supervisor,omitempty"`
	Team             *Lookup   `protobuf:"bytes,10,opt,name=team,proto3" json:"team,omitempty"`
	Region           *Lookup   `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`
	Auditor          []*Lookup `protobuf:"bytes,12,rep,name=auditor,proto3" json:"auditor,omitempty"`
	IsSupervisor     bool      `protobuf:"varint,13,opt,name=is_supervisor,json=isSupervisor,proto3" json:"is_supervisor,omitempty"`
}

func (x *PatchAgentRequest) Reset() {
	*x = PatchAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchAgentRequest) ProtoMessage() {}

func (x *PatchAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchAgentRequest.ProtoReflect.Descriptor instead.
func (*PatchAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{35}
}

func (x *PatchAgentRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PatchAgentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchAgentRequest) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PatchAgentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PatchAgentRequest) GetProgressiveCount() int32 {
	if x != nil {
		return x.ProgressiveCount
	}
	return 0
}

func (x *PatchAgentRequest) GetGreetingMedia() *Lookup {
	if x != nil {
		return x.GreetingMedia
	}
	return nil
}

func (x *PatchAgentRequest) GetAllowChannels() []string {
	if x != nil {
		return x.AllowChannels
	}
	return nil
}

func (x *PatchAgentRequest) GetChatCount() uint32 {
	if x != nil {
		return x.ChatCount
	}
	return 0
}

func (x *PatchAgentRequest) GetSupervisor() []*Lookup {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *PatchAgentRequest) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *PatchAgentRequest) GetRegion() *Lookup {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *PatchAgentRequest) GetAuditor() []*Lookup {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *PatchAgentRequest) GetIsSupervisor() bool {
	if x != nil {
		return x.IsSupervisor
	}
	return false
}

type ReadAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId int64 `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *ReadAgentRequest) Reset() {
	*x = ReadAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAgentRequest) ProtoMessage() {}

func (x *ReadAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAgentRequest.ProtoReflect.Descriptor instead.
func (*ReadAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{36}
}

func (x *ReadAgentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadAgentRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type DeleteAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId int64 `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *DeleteAgentRequest) Reset() {
	*x = DeleteAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentRequest) ProtoMessage() {}

func (x *DeleteAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentRequest.ProtoReflect.Descriptor instead.
func (*DeleteAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteAgentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteAgentRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type SearchAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q             string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort          string   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields        []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	Id            []string `protobuf:"bytes,7,rep,name=id,proto3" json:"id,omitempty"`
	AllowChannels []string `protobuf:"bytes,8,rep,name=allow_channels,json=allowChannels,proto3" json:"allow_channels,omitempty"`
	SupervisorId  []uint32 `protobuf:"varint,9,rep,packed,name=supervisor_id,json=supervisorId,proto3" json:"supervisor_id,omitempty"`
	TeamId        []uint32 `protobuf:"varint,10,rep,packed,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	RegionId      []uint32 `protobuf:"varint,11,rep,packed,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	AuditorId     []uint32 `protobuf:"varint,12,rep,packed,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
	IsSupervisor  bool     `protobuf:"varint,13,opt,name=is_supervisor,json=isSupervisor,proto3" json:"is_supervisor,omitempty"`
	SkillId       []uint32 `protobuf:"varint,14,rep,packed,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	QueueId       []uint32 `protobuf:"varint,15,rep,packed,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	NotSupervisor bool     `protobuf:"varint,16,opt,name=not_supervisor,json=notSupervisor,proto3" json:"not_supervisor,omitempty"`
	UserId        []int64  `protobuf:"varint,17,rep,packed,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Extension     []string `protobuf:"bytes,18,rep,name=extension,proto3" json:"extension,omitempty"`
	NotTeamId     []uint32 `protobuf:"varint,19,rep,packed,name=not_team_id,json=notTeamId,proto3" json:"not_team_id,omitempty"`
	NotSkillId    []uint32 `protobuf:"varint,20,rep,packed,name=not_skill_id,json=notSkillId,proto3" json:"not_skill_id,omitempty"`
}

func (x *SearchAgentRequest) Reset() {
	*x = SearchAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAgentRequest) ProtoMessage() {}

func (x *SearchAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAgentRequest.ProtoReflect.Descriptor instead.
func (*SearchAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{38}
}

func (x *SearchAgentRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAgentRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchAgentRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchAgentRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchAgentRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchAgentRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SearchAgentRequest) GetAllowChannels() []string {
	if x != nil {
		return x.AllowChannels
	}
	return nil
}

func (x *SearchAgentRequest) GetSupervisorId() []uint32 {
	if x != nil {
		return x.SupervisorId
	}
	return nil
}

func (x *SearchAgentRequest) GetTeamId() []uint32 {
	if x != nil {
		return x.TeamId
	}
	return nil
}

func (x *SearchAgentRequest) GetRegionId() []uint32 {
	if x != nil {
		return x.RegionId
	}
	return nil
}

func (x *SearchAgentRequest) GetAuditorId() []uint32 {
	if x != nil {
		return x.AuditorId
	}
	return nil
}

func (x *SearchAgentRequest) GetIsSupervisor() bool {
	if x != nil {
		return x.IsSupervisor
	}
	return false
}

func (x *SearchAgentRequest) GetSkillId() []uint32 {
	if x != nil {
		return x.SkillId
	}
	return nil
}

func (x *SearchAgentRequest) GetQueueId() []uint32 {
	if x != nil {
		return x.QueueId
	}
	return nil
}

func (x *SearchAgentRequest) GetNotSupervisor() bool {
	if x != nil {
		return x.NotSupervisor
	}
	return false
}

func (x *SearchAgentRequest) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *SearchAgentRequest) GetExtension() []string {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SearchAgentRequest) GetNotTeamId() []uint32 {
	if x != nil {
		return x.NotTeamId
	}
	return nil
}

func (x *SearchAgentRequest) GetNotSkillId() []uint32 {
	if x != nil {
		return x.NotSkillId
	}
	return nil
}

type CreateAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User             *Lookup   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Description      string    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ProgressiveCount int32     `protobuf:"varint,3,opt,name=progressive_count,json=progressiveCount,proto3" json:"progressive_count,omitempty"`
	GreetingMedia    *Lookup   `protobuf:"bytes,4,opt,name=greeting_media,json=greetingMedia,proto3" json:"greeting_media,omitempty"`
	DomainId         int64     `protobuf:"varint,5,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	AllowChannels    []string  `protobuf:"bytes,6,rep,name=allow_channels,json=allowChannels,proto3" json:"allow_channels,omitempty"`
	ChatCount        uint32    `protobuf:"varint,7,opt,name=chat_count,json=chatCount,proto3" json:"chat_count,omitempty"`
	Supervisor       []*Lookup `protobuf:"bytes,8,rep,name=supervisor,proto3" json:"supervisor,omitempty"`
	Team             *Lookup   `protobuf:"bytes,9,opt,name=team,proto3" json:"team,omitempty"`
	Region           *Lookup   `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	Auditor          []*Lookup `protobuf:"bytes,11,rep,name=auditor,proto3" json:"auditor,omitempty"`
	IsSupervisor     bool      `protobuf:"varint,12,opt,name=is_supervisor,json=isSupervisor,proto3" json:"is_supervisor,omitempty"`
	TaskCount        uint32    `protobuf:"varint,13,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
}

func (x *CreateAgentRequest) Reset() {
	*x = CreateAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentRequest) ProtoMessage() {}

func (x *CreateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentRequest.ProtoReflect.Descriptor instead.
func (*CreateAgentRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{39}
}

func (x *CreateAgentRequest) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateAgentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAgentRequest) GetProgressiveCount() int32 {
	if x != nil {
		return x.ProgressiveCount
	}
	return 0
}

func (x *CreateAgentRequest) GetGreetingMedia() *Lookup {
	if x != nil {
		return x.GreetingMedia
	}
	return nil
}

func (x *CreateAgentRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *CreateAgentRequest) GetAllowChannels() []string {
	if x != nil {
		return x.AllowChannels
	}
	return nil
}

func (x *CreateAgentRequest) GetChatCount() uint32 {
	if x != nil {
		return x.ChatCount
	}
	return 0
}

func (x *CreateAgentRequest) GetSupervisor() []*Lookup {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *CreateAgentRequest) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *CreateAgentRequest) GetRegion() *Lookup {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *CreateAgentRequest) GetAuditor() []*Lookup {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *CreateAgentRequest) GetIsSupervisor() bool {
	if x != nil {
		return x.IsSupervisor
	}
	return false
}

func (x *CreateAgentRequest) GetTaskCount() uint32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

type SkillAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Skill    *Lookup                `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	Agent    *Lookup                `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
	Capacity *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *SkillAgent) Reset() {
	*x = SkillAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillAgent) ProtoMessage() {}

func (x *SkillAgent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillAgent.ProtoReflect.Descriptor instead.
func (*SkillAgent) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{40}
}

func (x *SkillAgent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SkillAgent) GetSkill() *Lookup {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *SkillAgent) GetAgent() *Lookup {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *SkillAgent) GetCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.Capacity
	}
	return nil
}

type AgentStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status   string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` //FIXME enumerate
	OnDemand bool     `protobuf:"varint,3,opt,name=on_demand,json=onDemand,proto3" json:"on_demand,omitempty"`
	Channels []string `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
	Payload  string   `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	DomainId int64    `protobuf:"varint,6,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *AgentStatusRequest) Reset() {
	*x = AgentStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatusRequest) ProtoMessage() {}

func (x *AgentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatusRequest.ProtoReflect.Descriptor instead.
func (*AgentStatusRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{41}
}

func (x *AgentStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AgentStatusRequest) GetOnDemand() bool {
	if x != nil {
		return x.OnDemand
	}
	return false
}

func (x *AgentStatusRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *AgentStatusRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *AgentStatusRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type AgentChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel  string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	State    string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	JoinedAt int64  `protobuf:"varint,3,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	Timeout  int64  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *AgentChannel) Reset() {
	*x = AgentChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChannel) ProtoMessage() {}

func (x *AgentChannel) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChannel.ProtoReflect.Descriptor instead.
func (*AgentChannel) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{42}
}

func (x *AgentChannel) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *AgentChannel) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AgentChannel) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

func (x *AgentChannel) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User             *Lookup         `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Status           string          `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Description      string          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LastStatusChange int64           `protobuf:"varint,5,opt,name=last_status_change,json=lastStatusChange,proto3" json:"last_status_change,omitempty"`
	ProgressiveCount int32           `protobuf:"varint,6,opt,name=progressive_count,json=progressiveCount,proto3" json:"progressive_count,omitempty"`
	Name             string          `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Channel          []*AgentChannel `protobuf:"bytes,8,rep,name=channel,proto3" json:"channel,omitempty"`
	StatusDuration   int64           `protobuf:"varint,9,opt,name=status_duration,json=statusDuration,proto3" json:"status_duration,omitempty"`
	GreetingMedia    *Lookup         `protobuf:"bytes,10,opt,name=greeting_media,json=greetingMedia,proto3" json:"greeting_media,omitempty"`
	AllowChannels    []string        `protobuf:"bytes,11,rep,name=allow_channels,json=allowChannels,proto3" json:"allow_channels,omitempty"`
	ChatCount        uint32          `protobuf:"varint,12,opt,name=chat_count,json=chatCount,proto3" json:"chat_count,omitempty"`
	Supervisor       []*Lookup       `protobuf:"bytes,13,rep,name=supervisor,proto3" json:"supervisor,omitempty"`
	Team             *Lookup         `protobuf:"bytes,14,opt,name=team,proto3" json:"team,omitempty"`
	Region           *Lookup         `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	Auditor          []*Lookup       `protobuf:"bytes,16,rep,name=auditor,proto3" json:"auditor,omitempty"`
	IsSupervisor     bool            `protobuf:"varint,17,opt,name=is_supervisor,json=isSupervisor,proto3" json:"is_supervisor,omitempty"`
	Skills           []*Lookup       `protobuf:"bytes,18,rep,name=skills,proto3" json:"skills,omitempty"`
	Extension        string          `protobuf:"bytes,19,opt,name=extension,proto3" json:"extension,omitempty"`
	TaskCount        uint32          `protobuf:"varint,20,opt,name=task_count,json=taskCount,proto3" json:"task_count,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{43}
}

func (x *Agent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Agent) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Agent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Agent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Agent) GetLastStatusChange() int64 {
	if x != nil {
		return x.LastStatusChange
	}
	return 0
}

func (x *Agent) GetProgressiveCount() int32 {
	if x != nil {
		return x.ProgressiveCount
	}
	return 0
}

func (x *Agent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent) GetChannel() []*AgentChannel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Agent) GetStatusDuration() int64 {
	if x != nil {
		return x.StatusDuration
	}
	return 0
}

func (x *Agent) GetGreetingMedia() *Lookup {
	if x != nil {
		return x.GreetingMedia
	}
	return nil
}

func (x *Agent) GetAllowChannels() []string {
	if x != nil {
		return x.AllowChannels
	}
	return nil
}

func (x *Agent) GetChatCount() uint32 {
	if x != nil {
		return x.ChatCount
	}
	return 0
}

func (x *Agent) GetSupervisor() []*Lookup {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *Agent) GetTeam() *Lookup {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Agent) GetRegion() *Lookup {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *Agent) GetAuditor() []*Lookup {
	if x != nil {
		return x.Auditor
	}
	return nil
}

func (x *Agent) GetIsSupervisor() bool {
	if x != nil {
		return x.IsSupervisor
	}
	return false
}

func (x *Agent) GetSkills() []*Lookup {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *Agent) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *Agent) GetTaskCount() uint32 {
	if x != nil {
		return x.TaskCount
	}
	return 0
}

type ListAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool     `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*Agent `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListAgent) Reset() {
	*x = ListAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgent) ProtoMessage() {}

func (x *ListAgent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgent.ProtoReflect.Descriptor instead.
func (*ListAgent) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{44}
}

func (x *ListAgent) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListAgent) GetItems() []*Agent {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserStatus_UserPresence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserStatus_UserPresence) Reset() {
	*x = UserStatus_UserPresence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus_UserPresence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus_UserPresence) ProtoMessage() {}

func (x *UserStatus_UserPresence) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus_UserPresence.ProtoReflect.Descriptor instead.
func (*UserStatus_UserPresence) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UserStatus_UserPresence) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AgentInQueueStatistics_AgentInQueueStatisticsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket        *Lookup `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Skill         *Lookup `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	MemberWaiting int32   `protobuf:"varint,3,opt,name=member_waiting,json=memberWaiting,proto3" json:"member_waiting,omitempty"`
}

func (x *AgentInQueueStatistics_AgentInQueueStatisticsItem) Reset() {
	*x = AgentInQueueStatistics_AgentInQueueStatisticsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInQueueStatistics_AgentInQueueStatisticsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInQueueStatistics_AgentInQueueStatisticsItem) ProtoMessage() {}

func (x *AgentInQueueStatistics_AgentInQueueStatisticsItem) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInQueueStatistics_AgentInQueueStatisticsItem.ProtoReflect.Descriptor instead.
func (*AgentInQueueStatistics_AgentInQueueStatisticsItem) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{20, 0}
}

func (x *AgentInQueueStatistics_AgentInQueueStatisticsItem) GetBucket() *Lookup {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *AgentInQueueStatistics_AgentInQueueStatisticsItem) GetSkill() *Lookup {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *AgentInQueueStatistics_AgentInQueueStatisticsItem) GetMemberWaiting() int32 {
	if x != nil {
		return x.MemberWaiting
	}
	return 0
}

type AgentInQueue_AgentsInQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online     uint32                 `protobuf:"varint,1,opt,name=online,proto3" json:"online,omitempty"`
	Pause      uint32                 `protobuf:"varint,2,opt,name=pause,proto3" json:"pause,omitempty"`
	Offline    uint32                 `protobuf:"varint,3,opt,name=offline,proto3" json:"offline,omitempty"`
	Free       uint32                 `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Total      uint32                 `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	AllowPause *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=allow_pause,json=allowPause,proto3" json:"allow_pause,omitempty"`
}

func (x *AgentInQueue_AgentsInQueue) Reset() {
	*x = AgentInQueue_AgentsInQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInQueue_AgentsInQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInQueue_AgentsInQueue) ProtoMessage() {}

func (x *AgentInQueue_AgentsInQueue) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInQueue_AgentsInQueue.ProtoReflect.Descriptor instead.
func (*AgentInQueue_AgentsInQueue) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{28, 0}
}

func (x *AgentInQueue_AgentsInQueue) GetOnline() uint32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *AgentInQueue_AgentsInQueue) GetPause() uint32 {
	if x != nil {
		return x.Pause
	}
	return 0
}

func (x *AgentInQueue_AgentsInQueue) GetOffline() uint32 {
	if x != nil {
		return x.Offline
	}
	return 0
}

func (x *AgentInQueue_AgentsInQueue) GetFree() uint32 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *AgentInQueue_AgentsInQueue) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AgentInQueue_AgentsInQueue) GetAllowPause() *wrapperspb.Int32Value {
	if x != nil {
		return x.AllowPause
	}
	return nil
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcb, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x26, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7b,
	0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0x50, 0x0a, 0x1b, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xce, 0x07,
	0x0a, 0x1c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x61, 0x76, 0x67, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76,
	0x67, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x61, 0x76, 0x67, 0x48, 0x6f, 0x6c, 0x64, 0x53, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x63, 0x68, 0x61, 0x74, 0x41, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x61, 0x76, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x41, 0x76, 0x67, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x76, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x76, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x75,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x5f, 0x74,
	0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x75, 0x6d, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f,
	0x73, 0x65, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x65, 0x72,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61,
	0x6c, 0x6c, 0x44, 0x69, 0x61, 0x6c, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x22, 0x6d,
	0x0a, 0x25, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa4, 0x05,
	0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x12, 0x28, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x41, 0x76, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x41, 0x76, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x12, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x22,
	0x4a, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x43, 0x61, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x17,
	0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc2, 0x06, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x61, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x17,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x22, 0x60, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe7,
	0x03, 0x0a, 0x21, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x65, 0x74,
	0x77, 0x65, 0x65, 0x6e, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52, 0x08, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x85, 0x04, 0x0a,
	0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x5f, 0x74, 0x61,
	0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x75,
	0x6d, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x61, 0x76, 0x67, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c,
	0x6d, 0x61, 0x78, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x54, 0x61, 0x6c, 0x6b, 0x53, 0x65, 0x63, 0x12, 0x20,
	0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x73, 0x75, 0x6d, 0x48, 0x6f, 0x6c, 0x64, 0x53, 0x65, 0x63,
	0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x76, 0x67, 0x48, 0x6f, 0x6c, 0x64, 0x53,
	0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x73,
	0x65, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x48, 0x6f, 0x6c,
	0x64, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x6f, 0x6c, 0x64,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x48,
	0x6f, 0x6c, 0x64, 0x53, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x75, 0x74, 0x69,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x63, 0x63, 0x75,
	0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x61, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x74, 0x41, 0x68, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x60,
	0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x31, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x5d, 0x0a, 0x23, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0xad, 0x02, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x12, 0x59, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x1a,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0x52, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x4c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x2f, 0x0a, 0x09, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x7b, 0x0a, 0x26, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0xbe, 0x01, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0x8c, 0x02, 0x0a, 0x0a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22,
	0x55, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb7, 0x04, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x06, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0xbf,
	0x01, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x22, 0x52, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x7d, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x22, 0x50, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x9b, 0x04, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x0e, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0d, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xf6, 0x03, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x0e, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0d, 0x67, 0x72, 0x65,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04,
	0x74, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x10, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22,
	0xa2, 0x04, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f,
	0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x22, 0x8b, 0x04, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x0e, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0d, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x0a, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e, 0x44, 0x65, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xea, 0x05, 0x0a,
	0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0e,
	0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0d, 0x67, 0x72, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x61,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76,
	0x69, 0x73, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32,
	0xf4, 0x13, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x58, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x12, 0x13, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x56, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5d, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x01, 0x2a, 0x1a, 0x18, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x0a,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x32,
	0x18, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5a, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x3a, 0x01, 0x2a, 0x32, 0x1f, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x32, 0x2d,
	0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x8b, 0x01,
	0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x8c, 0x01, 0x0a, 0x17,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x76, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x20, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x65, 0x61,
	0x6d, 0x73, 0x12, 0x7a, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x98,
	0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x43, 0x61, 0x75, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x6f,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x61, 0x75,
	0x73, 0x65, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x1c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2b, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x38, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x9a, 0x01, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x23,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x31, 0x12, 0x2f, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x12, 0x90, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x28, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x94, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x29, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xa8, 0x01, 0x0a,
	0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2d, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x7b, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x93, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x67, 0x0a,
	0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData = file_agent_proto_rawDesc
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_proto_rawDescData)
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_agent_proto_goTypes = []interface{}{
	(*UserStatus)(nil),                                        // 0: engine.UserStatus
	(*SearchUserStatusRequest)(nil),                           // 1: engine.SearchUserStatusRequest
	(*ListUserStatus)(nil),                                    // 2: engine.ListUserStatus
	(*AgentTodayStatisticsRequest)(nil),                       // 3: engine.AgentTodayStatisticsRequest
	(*AgentTodayStatisticsResponse)(nil),                      // 4: engine.AgentTodayStatisticsResponse
	(*SearchAgentStatusStatisticItemRequest)(nil),             // 5: engine.SearchAgentStatusStatisticItemRequest
	(*AgentStatusStatisticItem)(nil),                          // 6: engine.AgentStatusStatisticItem
	(*SearchPauseCauseForAgentRequest)(nil),                   // 7: engine.SearchPauseCauseForAgentRequest
	(*ForAgentPauseCause)(nil),                                // 8: engine.ForAgentPauseCause
	(*ForAgentPauseCauseList)(nil),                            // 9: engine.ForAgentPauseCauseList
	(*AgentSetStateRequest)(nil),                              // 10: engine.AgentSetStateRequest
	(*AgentSetStateResponse)(nil),                             // 11: engine.AgentSetStateResponse
	(*AgentStatsStatistic)(nil),                               // 12: engine.AgentStatsStatistic
	(*ListAgentStatsStatistic)(nil),                           // 13: engine.ListAgentStatsStatistic
	(*SearchAgentStatusStatisticRequest)(nil),                 // 14: engine.SearchAgentStatusStatisticRequest
	(*SearchAgentStateHistoryRequest)(nil),                    // 15: engine.SearchAgentStateHistoryRequest
	(*AgentCallStatistics)(nil),                               // 16: engine.AgentCallStatistics
	(*SearchAgentCallStatisticsRequest)(nil),                  // 17: engine.SearchAgentCallStatisticsRequest
	(*AgentCallStatisticsList)(nil),                           // 18: engine.AgentCallStatisticsList
	(*SearchAgentInQueueStatisticsRequest)(nil),               // 19: engine.SearchAgentInQueueStatisticsRequest
	(*AgentInQueueStatistics)(nil),                            // 20: engine.AgentInQueueStatistics
	(*AgentInQueueStatisticsList)(nil),                        // 21: engine.AgentInQueueStatisticsList
	(*ListAgentUser)(nil),                                     // 22: engine.ListAgentUser
	(*AgentUser)(nil),                                         // 23: engine.AgentUser
	(*SearchLookupUsersAgentNotExistsRequest)(nil),            // 24: engine.SearchLookupUsersAgentNotExistsRequest
	(*AgentStateHistoryRequest)(nil),                          // 25: engine.AgentStateHistoryRequest
	(*AgentState)(nil),                                        // 26: engine.AgentState
	(*ListAgentStateHistory)(nil),                             // 27: engine.ListAgentStateHistory
	(*AgentInQueue)(nil),                                      // 28: engine.AgentInQueue
	(*ListAgentInQueue)(nil),                                  // 29: engine.ListAgentInQueue
	(*SearchAgentInQueueRequest)(nil),                         // 30: engine.SearchAgentInQueueRequest
	(*SearchAgentInTeamRequest)(nil),                          // 31: engine.SearchAgentInTeamRequest
	(*AgentInTeam)(nil),                                       // 32: engine.AgentInTeam
	(*ListAgentInTeam)(nil),                                   // 33: engine.ListAgentInTeam
	(*UpdateAgentRequest)(nil),                                // 34: engine.UpdateAgentRequest
	(*PatchAgentRequest)(nil),                                 // 35: engine.PatchAgentRequest
	(*ReadAgentRequest)(nil),                                  // 36: engine.ReadAgentRequest
	(*DeleteAgentRequest)(nil),                                // 37: engine.DeleteAgentRequest
	(*SearchAgentRequest)(nil),                                // 38: engine.SearchAgentRequest
	(*CreateAgentRequest)(nil),                                // 39: engine.CreateAgentRequest
	(*SkillAgent)(nil),                                        // 40: engine.SkillAgent
	(*AgentStatusRequest)(nil),                                // 41: engine.AgentStatusRequest
	(*AgentChannel)(nil),                                      // 42: engine.AgentChannel
	(*Agent)(nil),                                             // 43: engine.Agent
	(*ListAgent)(nil),                                         // 44: engine.ListAgent
	(*UserStatus_UserPresence)(nil),                           // 45: engine.UserStatus.UserPresence
	(*AgentInQueueStatistics_AgentInQueueStatisticsItem)(nil), // 46: engine.AgentInQueueStatistics.AgentInQueueStatisticsItem
	(*AgentInQueue_AgentsInQueue)(nil),                        // 47: engine.AgentInQueue.AgentsInQueue
	(*FilterBetween)(nil),                                     // 48: engine.FilterBetween
	(*Lookup)(nil),                                            // 49: engine.Lookup
	(*wrapperspb.Int32Value)(nil),                             // 50: google.protobuf.Int32Value
	(*Response)(nil),                                          // 51: engine.Response
}
var file_agent_proto_depIdxs = []int32{
	45, // 0: engine.UserStatus.presence:type_name -> engine.UserStatus.UserPresence
	0,  // 1: engine.ListUserStatus.items:type_name -> engine.UserStatus
	48, // 2: engine.SearchAgentStatusStatisticItemRequest.time:type_name -> engine.FilterBetween
	49, // 3: engine.AgentStatusStatisticItem.user:type_name -> engine.Lookup
	49, // 4: engine.AgentStatusStatisticItem.team:type_name -> engine.Lookup
	49, // 5: engine.AgentStatusStatisticItem.supervisor:type_name -> engine.Lookup
	49, // 6: engine.AgentStatusStatisticItem.auditor:type_name -> engine.Lookup
	49, // 7: engine.AgentStatusStatisticItem.region:type_name -> engine.Lookup
	8,  // 8: engine.ForAgentPauseCauseList.items:type_name -> engine.ForAgentPauseCause
	49, // 9: engine.AgentStatsStatistic.user:type_name -> engine.Lookup
	49, // 10: engine.AgentStatsStatistic.team:type_name -> engine.Lookup
	49, // 11: engine.AgentStatsStatistic.queues:type_name -> engine.Lookup
	49, // 12: engine.AgentStatsStatistic.skills:type_name -> engine.Lookup
	49, // 13: engine.AgentStatsStatistic.supervisor:type_name -> engine.Lookup
	49, // 14: engine.AgentStatsStatistic.auditor:type_name -> engine.Lookup
	12, // 15: engine.ListAgentStatsStatistic.items:type_name -> engine.AgentStatsStatistic
	48, // 16: engine.SearchAgentStatusStatisticRequest.time:type_name -> engine.FilterBetween
	48, // 17: engine.SearchAgentStatusStatisticRequest.utilization:type_name -> engine.FilterBetween
	48, // 18: engine.SearchAgentStateHistoryRequest.joined_at:type_name -> engine.FilterBetween
	48, // 19: engine.SearchAgentCallStatisticsRequest.time:type_name -> engine.FilterBetween
	16, // 20: engine.AgentCallStatisticsList.items:type_name -> engine.AgentCallStatistics
	49, // 21: engine.AgentInQueueStatistics.queue:type_name -> engine.Lookup
	46, // 22: engine.AgentInQueueStatistics.statistics:type_name -> engine.AgentInQueueStatistics.AgentInQueueStatisticsItem
	20, // 23: engine.AgentInQueueStatisticsList.items:type_name -> engine.AgentInQueueStatistics
	23, // 24: engine.ListAgentUser.items:type_name -> engine.AgentUser
	49, // 25: engine.AgentState.queue:type_name -> engine.Lookup
	49, // 26: engine.AgentState.agent:type_name -> engine.Lookup
	26, // 27: engine.ListAgentStateHistory.items:type_name -> engine.AgentState
	49, // 28: engine.AgentInQueue.queue:type_name -> engine.Lookup
	47, // 29: engine.AgentInQueue.agents:type_name -> engine.AgentInQueue.AgentsInQueue
	28, // 30: engine.ListAgentInQueue.items:type_name -> engine.AgentInQueue
	49, // 31: engine.AgentInTeam.team:type_name -> engine.Lookup
	32, // 32: engine.ListAgentInTeam.items:type_name -> engine.AgentInTeam
	49, // 33: engine.UpdateAgentRequest.user:type_name -> engine.Lookup
	49, // 34: engine.UpdateAgentRequest.greeting_media:type_name -> engine.Lookup
	49, // 35: engine.UpdateAgentRequest.supervisor:type_name -> engine.Lookup
	49, // 36: engine.UpdateAgentRequest.team:type_name -> engine.Lookup
	49, // 37: engine.UpdateAgentRequest.region:type_name -> engine.Lookup
	49, // 38: engine.UpdateAgentRequest.auditor:type_name -> engine.Lookup
	49, // 39: engine.PatchAgentRequest.user:type_name -> engine.Lookup
	49, // 40: engine.PatchAgentRequest.greeting_media:type_name -> engine.Lookup
	49, // 41: engine.PatchAgentRequest.supervisor:type_name -> engine.Lookup
	49, // 42: engine.PatchAgentRequest.team:type_name -> engine.Lookup
	49, // 43: engine.PatchAgentRequest.region:type_name -> engine.Lookup
	49, // 44: engine.PatchAgentRequest.auditor:type_name -> engine.Lookup
	49, // 45: engine.CreateAgentRequest.user:type_name -> engine.Lookup
	49, // 46: engine.CreateAgentRequest.greeting_media:type_name -> engine.Lookup
	49, // 47: engine.CreateAgentRequest.supervisor:type_name -> engine.Lookup
	49, // 48: engine.CreateAgentRequest.team:type_name -> engine.Lookup
	49, // 49: engine.CreateAgentRequest.region:type_name -> engine.Lookup
	49, // 50: engine.CreateAgentRequest.auditor:type_name -> engine.Lookup
	49, // 51: engine.SkillAgent.skill:type_name -> engine.Lookup
	49, // 52: engine.SkillAgent.agent:type_name -> engine.Lookup
	50, // 53: engine.SkillAgent.capacity:type_name -> google.protobuf.Int32Value
	49, // 54: engine.Agent.user:type_name -> engine.Lookup
	42, // 55: engine.Agent.channel:type_name -> engine.AgentChannel
	49, // 56: engine.Agent.greeting_media:type_name -> engine.Lookup
	49, // 57: engine.Agent.supervisor:type_name -> engine.Lookup
	49, // 58: engine.Agent.team:type_name -> engine.Lookup
	49, // 59: engine.Agent.region:type_name -> engine.Lookup
	49, // 60: engine.Agent.auditor:type_name -> engine.Lookup
	49, // 61: engine.Agent.skills:type_name -> engine.Lookup
	43, // 62: engine.ListAgent.items:type_name -> engine.Agent
	49, // 63: engine.AgentInQueueStatistics.AgentInQueueStatisticsItem.bucket:type_name -> engine.Lookup
	49, // 64: engine.AgentInQueueStatistics.AgentInQueueStatisticsItem.skill:type_name -> engine.Lookup
	50, // 65: engine.AgentInQueue.AgentsInQueue.allow_pause:type_name -> google.protobuf.Int32Value
	39, // 66: engine.AgentService.CreateAgent:input_type -> engine.CreateAgentRequest
	38, // 67: engine.AgentService.SearchAgent:input_type -> engine.SearchAgentRequest
	36, // 68: engine.AgentService.ReadAgent:input_type -> engine.ReadAgentRequest
	34, // 69: engine.AgentService.UpdateAgent:input_type -> engine.UpdateAgentRequest
	35, // 70: engine.AgentService.PatchAgent:input_type -> engine.PatchAgentRequest
	37, // 71: engine.AgentService.DeleteAgent:input_type -> engine.DeleteAgentRequest
	41, // 72: engine.AgentService.UpdateAgentStatus:input_type -> engine.AgentStatusRequest
	10, // 73: engine.AgentService.AgentSetState:input_type -> engine.AgentSetStateRequest
	25, // 74: engine.AgentService.AgentStateHistory:input_type -> engine.AgentStateHistoryRequest
	15, // 75: engine.AgentService.SearchAgentStateHistory:input_type -> engine.SearchAgentStateHistoryRequest
	31, // 76: engine.AgentService.SearchAgentInTeam:input_type -> engine.SearchAgentInTeamRequest
	30, // 77: engine.AgentService.SearchAgentInQueue:input_type -> engine.SearchAgentInQueueRequest
	7,  // 78: engine.AgentService.SearchPauseCauseForAgent:input_type -> engine.SearchPauseCauseForAgentRequest
	19, // 79: engine.AgentService.SearchAgentInQueueStatistics:input_type -> engine.SearchAgentInQueueStatisticsRequest
	3,  // 80: engine.AgentService.AgentTodayStatistics:input_type -> engine.AgentTodayStatisticsRequest
	17, // 81: engine.AgentService.SearchAgentCallStatistics:input_type -> engine.SearchAgentCallStatisticsRequest
	14, // 82: engine.AgentService.SearchAgentStatusStatistic:input_type -> engine.SearchAgentStatusStatisticRequest
	5,  // 83: engine.AgentService.SearchAgentStatusStatisticItem:input_type -> engine.SearchAgentStatusStatisticItemRequest
	24, // 84: engine.AgentService.SearchLookupUsersAgentNotExists:input_type -> engine.SearchLookupUsersAgentNotExistsRequest
	1,  // 85: engine.AgentService.SearchUserStatus:input_type -> engine.SearchUserStatusRequest
	43, // 86: engine.AgentService.CreateAgent:output_type -> engine.Agent
	44, // 87: engine.AgentService.SearchAgent:output_type -> engine.ListAgent
	43, // 88: engine.AgentService.ReadAgent:output_type -> engine.Agent
	43, // 89: engine.AgentService.UpdateAgent:output_type -> engine.Agent
	43, // 90: engine.AgentService.PatchAgent:output_type -> engine.Agent
	43, // 91: engine.AgentService.DeleteAgent:output_type -> engine.Agent
	51, // 92: engine.AgentService.UpdateAgentStatus:output_type -> engine.Response
	11, // 93: engine.AgentService.AgentSetState:output_type -> engine.AgentSetStateResponse
	27, // 94: engine.AgentService.AgentStateHistory:output_type -> engine.ListAgentStateHistory
	27, // 95: engine.AgentService.SearchAgentStateHistory:output_type -> engine.ListAgentStateHistory
	33, // 96: engine.AgentService.SearchAgentInTeam:output_type -> engine.ListAgentInTeam
	29, // 97: engine.AgentService.SearchAgentInQueue:output_type -> engine.ListAgentInQueue
	9,  // 98: engine.AgentService.SearchPauseCauseForAgent:output_type -> engine.ForAgentPauseCauseList
	21, // 99: engine.AgentService.SearchAgentInQueueStatistics:output_type -> engine.AgentInQueueStatisticsList
	4,  // 100: engine.AgentService.AgentTodayStatistics:output_type -> engine.AgentTodayStatisticsResponse
	18, // 101: engine.AgentService.SearchAgentCallStatistics:output_type -> engine.AgentCallStatisticsList
	13, // 102: engine.AgentService.SearchAgentStatusStatistic:output_type -> engine.ListAgentStatsStatistic
	6,  // 103: engine.AgentService.SearchAgentStatusStatisticItem:output_type -> engine.AgentStatusStatisticItem
	22, // 104: engine.AgentService.SearchLookupUsersAgentNotExists:output_type -> engine.ListAgentUser
	2,  // 105: engine.AgentService.SearchUserStatus:output_type -> engine.ListUserStatus
	86, // [86:106] is the sub-list for method output_type
	66, // [66:86] is the sub-list for method input_type
	66, // [66:66] is the sub-list for extension type_name
	66, // [66:66] is the sub-list for extension extendee
	0,  // [0:66] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	file_const_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentTodayStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentTodayStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentStatusStatisticItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentStatusStatisticItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPauseCauseForAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForAgentPauseCause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForAgentPauseCauseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentStatsStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentStatsStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentStatusStatisticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentStateHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCallStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentCallStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCallStatisticsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentInQueueStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInQueueStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInQueueStatisticsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLookupUsersAgentNotExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentStateHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentStateHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentInQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentInQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentInTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentInTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus_UserPresence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInQueueStatistics_AgentInQueueStatisticsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInQueue_AgentsInQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_rawDesc = nil
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}
