// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: outbound_resource_group.proto

package engine

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	OutboundResourceGroupService_CreateOutboundResourceGroup_FullMethodName   = "/engine.OutboundResourceGroupService/CreateOutboundResourceGroup"
	OutboundResourceGroupService_SearchOutboundResourceGroup_FullMethodName   = "/engine.OutboundResourceGroupService/SearchOutboundResourceGroup"
	OutboundResourceGroupService_ReadOutboundResourceGroup_FullMethodName     = "/engine.OutboundResourceGroupService/ReadOutboundResourceGroup"
	OutboundResourceGroupService_UpdateOutboundResourceGroup_FullMethodName   = "/engine.OutboundResourceGroupService/UpdateOutboundResourceGroup"
	OutboundResourceGroupService_DeleteOutboundResourceGroup_FullMethodName   = "/engine.OutboundResourceGroupService/DeleteOutboundResourceGroup"
	OutboundResourceGroupService_CreateOutboundResourceInGroup_FullMethodName = "/engine.OutboundResourceGroupService/CreateOutboundResourceInGroup"
	OutboundResourceGroupService_SearchOutboundResourceInGroup_FullMethodName = "/engine.OutboundResourceGroupService/SearchOutboundResourceInGroup"
	OutboundResourceGroupService_ReadOutboundResourceInGroup_FullMethodName   = "/engine.OutboundResourceGroupService/ReadOutboundResourceInGroup"
	OutboundResourceGroupService_UpdateOutboundResourceInGroup_FullMethodName = "/engine.OutboundResourceGroupService/UpdateOutboundResourceInGroup"
	OutboundResourceGroupService_DeleteOutboundResourceInGroup_FullMethodName = "/engine.OutboundResourceGroupService/DeleteOutboundResourceInGroup"
)

// OutboundResourceGroupServiceClient is the client API for OutboundResourceGroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OutboundResourceGroupServiceClient interface {
	// Create OutboundResourceGroup
	CreateOutboundResourceGroup(ctx context.Context, in *CreateOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error)
	// List of OutboundResourceGroup
	SearchOutboundResourceGroup(ctx context.Context, in *SearchOutboundResourceGroupRequest, opts ...grpc.CallOption) (*ListOutboundResourceGroup, error)
	// OutboundResourceGroup item
	ReadOutboundResourceGroup(ctx context.Context, in *ReadOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error)
	// Update OutboundResourceGroup
	UpdateOutboundResourceGroup(ctx context.Context, in *UpdateOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error)
	// Remove OutboundResourceGroup
	DeleteOutboundResourceGroup(ctx context.Context, in *DeleteOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error)
	// Create OutboundResourceGroup
	CreateOutboundResourceInGroup(ctx context.Context, in *CreateOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error)
	// List of OutboundResourceInGroup
	SearchOutboundResourceInGroup(ctx context.Context, in *SearchOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*ListOutboundResourceInGroup, error)
	// OutboundResourceInGroup item
	ReadOutboundResourceInGroup(ctx context.Context, in *ReadOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error)
	// Update OutboundResourceInGroup
	UpdateOutboundResourceInGroup(ctx context.Context, in *UpdateOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error)
	// Remove OutboundResourceInGroup
	DeleteOutboundResourceInGroup(ctx context.Context, in *DeleteOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error)
}

type outboundResourceGroupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOutboundResourceGroupServiceClient(cc grpc.ClientConnInterface) OutboundResourceGroupServiceClient {
	return &outboundResourceGroupServiceClient{cc}
}

func (c *outboundResourceGroupServiceClient) CreateOutboundResourceGroup(ctx context.Context, in *CreateOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error) {
	out := new(OutboundResourceGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_CreateOutboundResourceGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) SearchOutboundResourceGroup(ctx context.Context, in *SearchOutboundResourceGroupRequest, opts ...grpc.CallOption) (*ListOutboundResourceGroup, error) {
	out := new(ListOutboundResourceGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_SearchOutboundResourceGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) ReadOutboundResourceGroup(ctx context.Context, in *ReadOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error) {
	out := new(OutboundResourceGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_ReadOutboundResourceGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) UpdateOutboundResourceGroup(ctx context.Context, in *UpdateOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error) {
	out := new(OutboundResourceGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_UpdateOutboundResourceGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) DeleteOutboundResourceGroup(ctx context.Context, in *DeleteOutboundResourceGroupRequest, opts ...grpc.CallOption) (*OutboundResourceGroup, error) {
	out := new(OutboundResourceGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_DeleteOutboundResourceGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) CreateOutboundResourceInGroup(ctx context.Context, in *CreateOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error) {
	out := new(OutboundResourceInGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_CreateOutboundResourceInGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) SearchOutboundResourceInGroup(ctx context.Context, in *SearchOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*ListOutboundResourceInGroup, error) {
	out := new(ListOutboundResourceInGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_SearchOutboundResourceInGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) ReadOutboundResourceInGroup(ctx context.Context, in *ReadOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error) {
	out := new(OutboundResourceInGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_ReadOutboundResourceInGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) UpdateOutboundResourceInGroup(ctx context.Context, in *UpdateOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error) {
	out := new(OutboundResourceInGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_UpdateOutboundResourceInGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *outboundResourceGroupServiceClient) DeleteOutboundResourceInGroup(ctx context.Context, in *DeleteOutboundResourceInGroupRequest, opts ...grpc.CallOption) (*OutboundResourceInGroup, error) {
	out := new(OutboundResourceInGroup)
	err := c.cc.Invoke(ctx, OutboundResourceGroupService_DeleteOutboundResourceInGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OutboundResourceGroupServiceServer is the server API for OutboundResourceGroupService service.
// All implementations must embed UnimplementedOutboundResourceGroupServiceServer
// for forward compatibility
type OutboundResourceGroupServiceServer interface {
	// Create OutboundResourceGroup
	CreateOutboundResourceGroup(context.Context, *CreateOutboundResourceGroupRequest) (*OutboundResourceGroup, error)
	// List of OutboundResourceGroup
	SearchOutboundResourceGroup(context.Context, *SearchOutboundResourceGroupRequest) (*ListOutboundResourceGroup, error)
	// OutboundResourceGroup item
	ReadOutboundResourceGroup(context.Context, *ReadOutboundResourceGroupRequest) (*OutboundResourceGroup, error)
	// Update OutboundResourceGroup
	UpdateOutboundResourceGroup(context.Context, *UpdateOutboundResourceGroupRequest) (*OutboundResourceGroup, error)
	// Remove OutboundResourceGroup
	DeleteOutboundResourceGroup(context.Context, *DeleteOutboundResourceGroupRequest) (*OutboundResourceGroup, error)
	// Create OutboundResourceGroup
	CreateOutboundResourceInGroup(context.Context, *CreateOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error)
	// List of OutboundResourceInGroup
	SearchOutboundResourceInGroup(context.Context, *SearchOutboundResourceInGroupRequest) (*ListOutboundResourceInGroup, error)
	// OutboundResourceInGroup item
	ReadOutboundResourceInGroup(context.Context, *ReadOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error)
	// Update OutboundResourceInGroup
	UpdateOutboundResourceInGroup(context.Context, *UpdateOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error)
	// Remove OutboundResourceInGroup
	DeleteOutboundResourceInGroup(context.Context, *DeleteOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error)
	mustEmbedUnimplementedOutboundResourceGroupServiceServer()
}

// UnimplementedOutboundResourceGroupServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOutboundResourceGroupServiceServer struct {
}

func (UnimplementedOutboundResourceGroupServiceServer) CreateOutboundResourceGroup(context.Context, *CreateOutboundResourceGroupRequest) (*OutboundResourceGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOutboundResourceGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) SearchOutboundResourceGroup(context.Context, *SearchOutboundResourceGroupRequest) (*ListOutboundResourceGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchOutboundResourceGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) ReadOutboundResourceGroup(context.Context, *ReadOutboundResourceGroupRequest) (*OutboundResourceGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadOutboundResourceGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) UpdateOutboundResourceGroup(context.Context, *UpdateOutboundResourceGroupRequest) (*OutboundResourceGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOutboundResourceGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) DeleteOutboundResourceGroup(context.Context, *DeleteOutboundResourceGroupRequest) (*OutboundResourceGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOutboundResourceGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) CreateOutboundResourceInGroup(context.Context, *CreateOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOutboundResourceInGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) SearchOutboundResourceInGroup(context.Context, *SearchOutboundResourceInGroupRequest) (*ListOutboundResourceInGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchOutboundResourceInGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) ReadOutboundResourceInGroup(context.Context, *ReadOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadOutboundResourceInGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) UpdateOutboundResourceInGroup(context.Context, *UpdateOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOutboundResourceInGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) DeleteOutboundResourceInGroup(context.Context, *DeleteOutboundResourceInGroupRequest) (*OutboundResourceInGroup, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOutboundResourceInGroup not implemented")
}
func (UnimplementedOutboundResourceGroupServiceServer) mustEmbedUnimplementedOutboundResourceGroupServiceServer() {
}

// UnsafeOutboundResourceGroupServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OutboundResourceGroupServiceServer will
// result in compilation errors.
type UnsafeOutboundResourceGroupServiceServer interface {
	mustEmbedUnimplementedOutboundResourceGroupServiceServer()
}

func RegisterOutboundResourceGroupServiceServer(s grpc.ServiceRegistrar, srv OutboundResourceGroupServiceServer) {
	s.RegisterService(&OutboundResourceGroupService_ServiceDesc, srv)
}

func _OutboundResourceGroupService_CreateOutboundResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOutboundResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).CreateOutboundResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_CreateOutboundResourceGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).CreateOutboundResourceGroup(ctx, req.(*CreateOutboundResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_SearchOutboundResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchOutboundResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).SearchOutboundResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_SearchOutboundResourceGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).SearchOutboundResourceGroup(ctx, req.(*SearchOutboundResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_ReadOutboundResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadOutboundResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).ReadOutboundResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_ReadOutboundResourceGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).ReadOutboundResourceGroup(ctx, req.(*ReadOutboundResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_UpdateOutboundResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOutboundResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).UpdateOutboundResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_UpdateOutboundResourceGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).UpdateOutboundResourceGroup(ctx, req.(*UpdateOutboundResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_DeleteOutboundResourceGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOutboundResourceGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).DeleteOutboundResourceGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_DeleteOutboundResourceGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).DeleteOutboundResourceGroup(ctx, req.(*DeleteOutboundResourceGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_CreateOutboundResourceInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOutboundResourceInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).CreateOutboundResourceInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_CreateOutboundResourceInGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).CreateOutboundResourceInGroup(ctx, req.(*CreateOutboundResourceInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_SearchOutboundResourceInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchOutboundResourceInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).SearchOutboundResourceInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_SearchOutboundResourceInGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).SearchOutboundResourceInGroup(ctx, req.(*SearchOutboundResourceInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_ReadOutboundResourceInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadOutboundResourceInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).ReadOutboundResourceInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_ReadOutboundResourceInGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).ReadOutboundResourceInGroup(ctx, req.(*ReadOutboundResourceInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_UpdateOutboundResourceInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOutboundResourceInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).UpdateOutboundResourceInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_UpdateOutboundResourceInGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).UpdateOutboundResourceInGroup(ctx, req.(*UpdateOutboundResourceInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OutboundResourceGroupService_DeleteOutboundResourceInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOutboundResourceInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OutboundResourceGroupServiceServer).DeleteOutboundResourceInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OutboundResourceGroupService_DeleteOutboundResourceInGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OutboundResourceGroupServiceServer).DeleteOutboundResourceInGroup(ctx, req.(*DeleteOutboundResourceInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OutboundResourceGroupService_ServiceDesc is the grpc.ServiceDesc for OutboundResourceGroupService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OutboundResourceGroupService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "engine.OutboundResourceGroupService",
	HandlerType: (*OutboundResourceGroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOutboundResourceGroup",
			Handler:    _OutboundResourceGroupService_CreateOutboundResourceGroup_Handler,
		},
		{
			MethodName: "SearchOutboundResourceGroup",
			Handler:    _OutboundResourceGroupService_SearchOutboundResourceGroup_Handler,
		},
		{
			MethodName: "ReadOutboundResourceGroup",
			Handler:    _OutboundResourceGroupService_ReadOutboundResourceGroup_Handler,
		},
		{
			MethodName: "UpdateOutboundResourceGroup",
			Handler:    _OutboundResourceGroupService_UpdateOutboundResourceGroup_Handler,
		},
		{
			MethodName: "DeleteOutboundResourceGroup",
			Handler:    _OutboundResourceGroupService_DeleteOutboundResourceGroup_Handler,
		},
		{
			MethodName: "CreateOutboundResourceInGroup",
			Handler:    _OutboundResourceGroupService_CreateOutboundResourceInGroup_Handler,
		},
		{
			MethodName: "SearchOutboundResourceInGroup",
			Handler:    _OutboundResourceGroupService_SearchOutboundResourceInGroup_Handler,
		},
		{
			MethodName: "ReadOutboundResourceInGroup",
			Handler:    _OutboundResourceGroupService_ReadOutboundResourceInGroup_Handler,
		},
		{
			MethodName: "UpdateOutboundResourceInGroup",
			Handler:    _OutboundResourceGroupService_UpdateOutboundResourceInGroup_Handler,
		},
		{
			MethodName: "DeleteOutboundResourceInGroup",
			Handler:    _OutboundResourceGroupService_DeleteOutboundResourceInGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "outbound_resource_group.proto",
}
