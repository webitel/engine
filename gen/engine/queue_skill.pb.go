// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: queue_skill.proto

package engine

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateQueueSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId     uint32                 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Skill       *Lookup                `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	Buckets     []*Lookup              `protobuf:"bytes,3,rep,name=buckets,proto3" json:"buckets,omitempty"`
	Lvl         int32                  `protobuf:"varint,4,opt,name=lvl,proto3" json:"lvl,omitempty"`
	MinCapacity *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=min_capacity,json=minCapacity,proto3" json:"min_capacity,omitempty"`
	MaxCapacity *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	Enabled     bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *CreateQueueSkillRequest) Reset() {
	*x = CreateQueueSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueueSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueSkillRequest) ProtoMessage() {}

func (x *CreateQueueSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueSkillRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueSkillRequest) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{0}
}

func (x *CreateQueueSkillRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *CreateQueueSkillRequest) GetSkill() *Lookup {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *CreateQueueSkillRequest) GetBuckets() []*Lookup {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *CreateQueueSkillRequest) GetLvl() int32 {
	if x != nil {
		return x.Lvl
	}
	return 0
}

func (x *CreateQueueSkillRequest) GetMinCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinCapacity
	}
	return nil
}

func (x *CreateQueueSkillRequest) GetMaxCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

func (x *CreateQueueSkillRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type QueueSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Skill       *Lookup                `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	Buckets     []*Lookup              `protobuf:"bytes,3,rep,name=buckets,proto3" json:"buckets,omitempty"`
	Lvl         int32                  `protobuf:"varint,4,opt,name=lvl,proto3" json:"lvl,omitempty"`
	MinCapacity *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=min_capacity,json=minCapacity,proto3" json:"min_capacity,omitempty"`
	MaxCapacity *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	Enabled     bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *QueueSkill) Reset() {
	*x = QueueSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueSkill) ProtoMessage() {}

func (x *QueueSkill) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueSkill.ProtoReflect.Descriptor instead.
func (*QueueSkill) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{1}
}

func (x *QueueSkill) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueueSkill) GetSkill() *Lookup {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *QueueSkill) GetBuckets() []*Lookup {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *QueueSkill) GetLvl() int32 {
	if x != nil {
		return x.Lvl
	}
	return 0
}

func (x *QueueSkill) GetMinCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinCapacity
	}
	return nil
}

func (x *QueueSkill) GetMaxCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

func (x *QueueSkill) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateQueueSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId     uint32                 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Id          uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Skill       *Lookup                `protobuf:"bytes,3,opt,name=skill,proto3" json:"skill,omitempty"`
	Buckets     []*Lookup              `protobuf:"bytes,4,rep,name=buckets,proto3" json:"buckets,omitempty"`
	Lvl         int32                  `protobuf:"varint,5,opt,name=lvl,proto3" json:"lvl,omitempty"`
	MinCapacity *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=min_capacity,json=minCapacity,proto3" json:"min_capacity,omitempty"`
	MaxCapacity *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	Enabled     bool                   `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *UpdateQueueSkillRequest) Reset() {
	*x = UpdateQueueSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQueueSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueueSkillRequest) ProtoMessage() {}

func (x *UpdateQueueSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueueSkillRequest.ProtoReflect.Descriptor instead.
func (*UpdateQueueSkillRequest) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateQueueSkillRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *UpdateQueueSkillRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateQueueSkillRequest) GetSkill() *Lookup {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *UpdateQueueSkillRequest) GetBuckets() []*Lookup {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *UpdateQueueSkillRequest) GetLvl() int32 {
	if x != nil {
		return x.Lvl
	}
	return 0
}

func (x *UpdateQueueSkillRequest) GetMinCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinCapacity
	}
	return nil
}

func (x *UpdateQueueSkillRequest) GetMaxCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

func (x *UpdateQueueSkillRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type PatchQueueSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId     uint32                 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Id          uint32                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Skill       *Lookup                `protobuf:"bytes,3,opt,name=skill,proto3" json:"skill,omitempty"`
	Buckets     []*Lookup              `protobuf:"bytes,4,rep,name=buckets,proto3" json:"buckets,omitempty"`
	Lvl         int32                  `protobuf:"varint,5,opt,name=lvl,proto3" json:"lvl,omitempty"`
	MinCapacity *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=min_capacity,json=minCapacity,proto3" json:"min_capacity,omitempty"`
	MaxCapacity *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	Enabled     bool                   `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Fields      []string               `protobuf:"bytes,9,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *PatchQueueSkillRequest) Reset() {
	*x = PatchQueueSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchQueueSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchQueueSkillRequest) ProtoMessage() {}

func (x *PatchQueueSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchQueueSkillRequest.ProtoReflect.Descriptor instead.
func (*PatchQueueSkillRequest) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{3}
}

func (x *PatchQueueSkillRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *PatchQueueSkillRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchQueueSkillRequest) GetSkill() *Lookup {
	if x != nil {
		return x.Skill
	}
	return nil
}

func (x *PatchQueueSkillRequest) GetBuckets() []*Lookup {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *PatchQueueSkillRequest) GetLvl() int32 {
	if x != nil {
		return x.Lvl
	}
	return 0
}

func (x *PatchQueueSkillRequest) GetMinCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinCapacity
	}
	return nil
}

func (x *PatchQueueSkillRequest) GetMaxCapacity() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

func (x *PatchQueueSkillRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PatchQueueSkillRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchQueueSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId     uint32   `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Page        int32    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size        int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Q           string   `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	Sort        string   `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields      []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	Id          []uint32 `protobuf:"varint,7,rep,packed,name=id,proto3" json:"id,omitempty"`
	SkillId     []uint32 `protobuf:"varint,8,rep,packed,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	BucketId    []uint32 `protobuf:"varint,9,rep,packed,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	Lvl         []int32  `protobuf:"varint,10,rep,packed,name=lvl,proto3" json:"lvl,omitempty"`
	MinCapacity []int32  `protobuf:"varint,11,rep,packed,name=min_capacity,json=minCapacity,proto3" json:"min_capacity,omitempty"`
	MaxCapacity []int32  `protobuf:"varint,12,rep,packed,name=max_capacity,json=maxCapacity,proto3" json:"max_capacity,omitempty"`
	Enabled     bool     `protobuf:"varint,13,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SearchQueueSkillRequest) Reset() {
	*x = SearchQueueSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchQueueSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchQueueSkillRequest) ProtoMessage() {}

func (x *SearchQueueSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchQueueSkillRequest.ProtoReflect.Descriptor instead.
func (*SearchQueueSkillRequest) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{4}
}

func (x *SearchQueueSkillRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *SearchQueueSkillRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchQueueSkillRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchQueueSkillRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchQueueSkillRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchQueueSkillRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetSkillId() []uint32 {
	if x != nil {
		return x.SkillId
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetBucketId() []uint32 {
	if x != nil {
		return x.BucketId
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetLvl() []int32 {
	if x != nil {
		return x.Lvl
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetMinCapacity() []int32 {
	if x != nil {
		return x.MinCapacity
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetMaxCapacity() []int32 {
	if x != nil {
		return x.MaxCapacity
	}
	return nil
}

func (x *SearchQueueSkillRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type DeleteQueueSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId uint32 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Id      uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteQueueSkillRequest) Reset() {
	*x = DeleteQueueSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueueSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueSkillRequest) ProtoMessage() {}

func (x *DeleteQueueSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueSkillRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueSkillRequest) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteQueueSkillRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *DeleteQueueSkillRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListQueueSkill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Next  bool          `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items []*QueueSkill `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListQueueSkill) Reset() {
	*x = ListQueueSkill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQueueSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueueSkill) ProtoMessage() {}

func (x *ListQueueSkill) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueueSkill.ProtoReflect.Descriptor instead.
func (*ListQueueSkill) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{6}
}

func (x *ListQueueSkill) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListQueueSkill) GetItems() []*QueueSkill {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReadQueueSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueId uint32 `protobuf:"varint,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Id      uint32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReadQueueSkillRequest) Reset() {
	*x = ReadQueueSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queue_skill_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadQueueSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadQueueSkillRequest) ProtoMessage() {}

func (x *ReadQueueSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_skill_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadQueueSkillRequest.ProtoReflect.Descriptor instead.
func (*ReadQueueSkillRequest) Descriptor() ([]byte, []int) {
	return file_queue_skill_proto_rawDescGZIP(), []int{7}
}

func (x *ReadQueueSkillRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *ReadQueueSkillRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_queue_skill_proto protoreflect.FileDescriptor

var file_queue_skill_proto_rawDesc = []byte{
	0x0a, 0x11, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x12, 0x28, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x76, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x76, 0x6c, 0x12,
	0x3e, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x3e, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x98, 0x02, 0x0a, 0x0a, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x28,
	0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x76, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x76, 0x6c, 0x12, 0x3e, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6d,
	0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x6d, 0x61,
	0x78, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0xc0, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x12, 0x28, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x76, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x76, 0x6c, 0x12, 0x3e, 0x0a,
	0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x16, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x12, 0x28, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x76, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x76, 0x6c, 0x12,
	0x3e, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x3e, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0xd0, 0x02, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x76, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x6c, 0x76, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x63,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x42, 0x0a, 0x15, 0x52, 0x65,
	0x61, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x32, 0xfe,
	0x05, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x30, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12,
	0x7a, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x2d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x77, 0x0a, 0x0e, 0x52,
	0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1d, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x1a, 0x2a, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0f, 0x50, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1e, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x35, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x32, 0x2a, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x7b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x32, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42,
	0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_queue_skill_proto_rawDescOnce sync.Once
	file_queue_skill_proto_rawDescData = file_queue_skill_proto_rawDesc
)

func file_queue_skill_proto_rawDescGZIP() []byte {
	file_queue_skill_proto_rawDescOnce.Do(func() {
		file_queue_skill_proto_rawDescData = protoimpl.X.CompressGZIP(file_queue_skill_proto_rawDescData)
	})
	return file_queue_skill_proto_rawDescData
}

var file_queue_skill_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_queue_skill_proto_goTypes = []interface{}{
	(*CreateQueueSkillRequest)(nil), // 0: engine.CreateQueueSkillRequest
	(*QueueSkill)(nil),              // 1: engine.QueueSkill
	(*UpdateQueueSkillRequest)(nil), // 2: engine.UpdateQueueSkillRequest
	(*PatchQueueSkillRequest)(nil),  // 3: engine.PatchQueueSkillRequest
	(*SearchQueueSkillRequest)(nil), // 4: engine.SearchQueueSkillRequest
	(*DeleteQueueSkillRequest)(nil), // 5: engine.DeleteQueueSkillRequest
	(*ListQueueSkill)(nil),          // 6: engine.ListQueueSkill
	(*ReadQueueSkillRequest)(nil),   // 7: engine.ReadQueueSkillRequest
	(*Lookup)(nil),                  // 8: engine.Lookup
	(*wrapperspb.Int32Value)(nil),   // 9: google.protobuf.Int32Value
}
var file_queue_skill_proto_depIdxs = []int32{
	8,  // 0: engine.CreateQueueSkillRequest.skill:type_name -> engine.Lookup
	8,  // 1: engine.CreateQueueSkillRequest.buckets:type_name -> engine.Lookup
	9,  // 2: engine.CreateQueueSkillRequest.min_capacity:type_name -> google.protobuf.Int32Value
	9,  // 3: engine.CreateQueueSkillRequest.max_capacity:type_name -> google.protobuf.Int32Value
	8,  // 4: engine.QueueSkill.skill:type_name -> engine.Lookup
	8,  // 5: engine.QueueSkill.buckets:type_name -> engine.Lookup
	9,  // 6: engine.QueueSkill.min_capacity:type_name -> google.protobuf.Int32Value
	9,  // 7: engine.QueueSkill.max_capacity:type_name -> google.protobuf.Int32Value
	8,  // 8: engine.UpdateQueueSkillRequest.skill:type_name -> engine.Lookup
	8,  // 9: engine.UpdateQueueSkillRequest.buckets:type_name -> engine.Lookup
	9,  // 10: engine.UpdateQueueSkillRequest.min_capacity:type_name -> google.protobuf.Int32Value
	9,  // 11: engine.UpdateQueueSkillRequest.max_capacity:type_name -> google.protobuf.Int32Value
	8,  // 12: engine.PatchQueueSkillRequest.skill:type_name -> engine.Lookup
	8,  // 13: engine.PatchQueueSkillRequest.buckets:type_name -> engine.Lookup
	9,  // 14: engine.PatchQueueSkillRequest.min_capacity:type_name -> google.protobuf.Int32Value
	9,  // 15: engine.PatchQueueSkillRequest.max_capacity:type_name -> google.protobuf.Int32Value
	1,  // 16: engine.ListQueueSkill.items:type_name -> engine.QueueSkill
	0,  // 17: engine.QueueSkillService.CreateQueueSkill:input_type -> engine.CreateQueueSkillRequest
	4,  // 18: engine.QueueSkillService.SearchQueueSkill:input_type -> engine.SearchQueueSkillRequest
	7,  // 19: engine.QueueSkillService.ReadQueueSkill:input_type -> engine.ReadQueueSkillRequest
	2,  // 20: engine.QueueSkillService.UpdateQueueSkill:input_type -> engine.UpdateQueueSkillRequest
	3,  // 21: engine.QueueSkillService.PatchQueueSkill:input_type -> engine.PatchQueueSkillRequest
	5,  // 22: engine.QueueSkillService.DeleteQueueSkill:input_type -> engine.DeleteQueueSkillRequest
	1,  // 23: engine.QueueSkillService.CreateQueueSkill:output_type -> engine.QueueSkill
	6,  // 24: engine.QueueSkillService.SearchQueueSkill:output_type -> engine.ListQueueSkill
	1,  // 25: engine.QueueSkillService.ReadQueueSkill:output_type -> engine.QueueSkill
	1,  // 26: engine.QueueSkillService.UpdateQueueSkill:output_type -> engine.QueueSkill
	1,  // 27: engine.QueueSkillService.PatchQueueSkill:output_type -> engine.QueueSkill
	1,  // 28: engine.QueueSkillService.DeleteQueueSkill:output_type -> engine.QueueSkill
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_queue_skill_proto_init() }
func file_queue_skill_proto_init() {
	if File_queue_skill_proto != nil {
		return
	}
	file_const_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_queue_skill_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueueSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQueueSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchQueueSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchQueueSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueueSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQueueSkill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queue_skill_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadQueueSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_queue_skill_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_queue_skill_proto_goTypes,
		DependencyIndexes: file_queue_skill_proto_depIdxs,
		MessageInfos:      file_queue_skill_proto_msgTypes,
	}.Build()
	File_queue_skill_proto = out.File
	file_queue_skill_proto_rawDesc = nil
	file_queue_skill_proto_goTypes = nil
	file_queue_skill_proto_depIdxs = nil
}
